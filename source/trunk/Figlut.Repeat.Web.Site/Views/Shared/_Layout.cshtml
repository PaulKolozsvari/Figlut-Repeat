@using Figlut.Repeat.Web.Site.Configuration;
@using Figlut.Repeat.Data;
@using Figlut.Repeat.ORM;
@using Figlut.Repeat.ORM.Helpers;

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8" />
        <title>@ViewBag.Title</title>
        <link href="~/Figlut-AppLogo-FINAL-Blue-Red.ico" rel="shortcut icon" type="image/x-icon" />

        @*Comment out the line below to enable scaling for mobile devices.*@
        @if (Convert.ToBoolean(RepeatWebApp.Instance.GlobalSettings[GlobalSettingName.DisableScreenScalingForMobileDevices].SettingValue))
        {
            <meta name="viewport" content="width=device-width" />
        }

        @Styles.Render("~/Content/slickbuttons/css")
        @Styles.Render("~/Content/themes/base/css")
        @Scripts.Render("~/bundles/modernizr")

        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/jqueryui")
        @Styles.Render("~/Content/css")
    </head>
    <body>
        @{
            User currentUser = null;
            Organization currentOrganization = null;
            string currentAction = ViewContext.RouteData.GetRequiredString("action");
            string currentController = ViewContext.RouteData.GetRequiredString("controller");
        }
        @if (Request.IsAuthenticated)
        {
            RepeatEntityContext context = RepeatEntityContext.Create();
            currentUser = context.GetUserByIdentifier(User.Identity.Name, false);
            if (currentUser == null)
            {
                //If the request is authenticated, but the user does not exist in the database, sign out the user. This will happen when the user's name or email address has been changed by an administrator or an organization administrator and this user is still currently logged.
                FormsAuthentication.SignOut();
                Response.Redirect("~/Home");
                return;
            }
            else if (currentUser.OrganizationId.HasValue)
            {
                currentOrganization = context.GetOrganization(currentUser.OrganizationId.Value, false);
            }
        }

        <script type="text/javascript">
            function loadDialog(dialogWrapperName, dialogName, action, controller, fieldName, fieldValue) {
                if ($(dialogName).length == 0) {
                    var url;
                    if (fieldName == undefined || fieldValue == undefined) {
                        url = "@Url.Action("_Action", "_Controller")".replace("_Action", action).replace("_Controller", controller);
                    }
                    else {
                        url = "@Url.Action("_Action", "_Controller", new { _FieldName = "_FieldValue" })".replace("_Action", action).replace("_Controller", controller).replace("_FieldName", fieldName).replace("_FieldValue", fieldValue);
                    }
                    $(dialogWrapperName).load(url);
                }
            }

            function showDialog(dialogWrapperName, dialogName, action, controller, fieldName, fieldValue) {
                var url;
                if (fieldName == undefined || fieldValue == undefined) {
                    url = "@Url.Action("_Action", "_Controller")".replace("_Action", action).replace("_Controller", controller);
                }
                else {
                    url = "@Url.Action("_Action", "_Controller", new { _FieldName = "_FieldValue" })".replace("_Action", action).replace("_Controller", controller).replace("_FieldName", fieldName).replace("_FieldValue", fieldValue);
                }
                if ($(dialogName).length == 0) {
                    $(dialogWrapperName).load(url);
                } else {
                    $.ajax({
                        url: url,
                        type: 'GET',
                        cache: false,
                        success: function (data) {
                            $(dialogName).html(data);
                        }
                    });
                }
                $(dialogName).dialog("open");
            }

            $(document).ready(function () {
                loadDialog("#divLogin", "#dlgLogin", "LoginDialog", "User");
                loadDialog("#divResetPassword", "#dlgResetPassword", "ResetPasswordDialog", "User");
                loadDialog("#divWaitDialog", "#dlgWait", "WaitDialog", "SmsSent", 'message', '@string.Empty');
                loadDialog("#divInformationDialog", "#dlgInformation", "InformationDialog", "SmsSent", 'message', '@string.Empty');
                @if (Request.IsAuthenticated)
                {
                    <text>
                        var currentUserId = '@(currentUser != null ? currentUser.UserId.ToString() : string.Empty)';
                        if (currentUserId == '') {
                            return;
                        }
                        var currentOrganizationId = '@(currentOrganization != null ? currentOrganization.OrganizationId.ToString() : string.Empty)';
                        if (currentOrganizationId == '') {
                            return;
                        }
                        loadDialog("#divEditUserProfile", "#dlgEditUserProfile", "EditProfileDialog", "User", '', '@null');
                        loadDialog("#divEditUserPassword", "#dlgEditUserPassword", "EditUserPasswordDialog", "User", 'userId', '@null');
                        loadDialog("#divEditOrganizationProfile", "#dlgEditOrganizationProfile", "EditProfileDialog", "Organization", '', '@null');
                        loadDialog("#divSendSmsDialog", "#dlgSendSmsDialog", "SendSms", "SmsSent", '', '@null');
                    </text>
                }
            });
        </script>

        @*Dialogs*@
        <div id="divLogin"></div>
        <div id="divResetPassword"></div>
        <div id="divSendSmsDialog"></div>
        <div id='divConfirmationDialog'></div>
        <div id="divWaitDialog"></div>
        <div id="divInformationDialog"></div>
        <div id="divEditGlobalSetting"></div>
        <div id="divCreateOrganization"></div>
        <div id="divEditOrganization"></div>
        <div id="divEditOrganizationProfile"></div>
        <div id="divCreateUser"></div>
        <div id="divEditUser"></div>
        <div id="divEditUserPassword"></div>
        <div id="divEditUserProfile"></div>
        <div id="divCreateSubscriber"></div>
        <div id="divEditSubscriber"></div>
        <div id="divEditSubscriberSubscription"></div>
        <div id="divCreateOrganizationSubscription"></div>
        <div id="divSendSubscriberSmsDialog"></div>
        <div id="divEditOrganizationSubscription"></div>
        <div id="divEditSmsCampaign"></div>
        <div id="divCreateSmsCampaign"></div>
        <div id="divEditWebRequestActivity"></div>
        <div id="divEditCountry"></div>
        <div id="divCreateCountry"></div>
        <div id="divCreatePublicHoliday"></div>
        <div id="divGenerateCountryPublicHolidays"></div>
        <div id="divEditPublicHoliday"></div>
        <div id="divEditSmsMessageTemplate"></div>
        <div id="divCreateSmsMessageTemplate"></div>
        <div id="divCreateSchedule"></div>
        <div id="divExtendSchedule"></div>
        <div id="divEditSchedule"></div>
        <div id="divCreateScheduleEntry"></div>
        <div id="divShiftScheduleEntry"></div>
        <div id="divEditScheduleEntry"></div>
        <div id="divEditProcessor"></div>

        <a id="back-to-top"></a>
        <header>
            <div class="content-wrapper">
                <div class="float-left">
                    <nav>
                        <ul id="menu">
                            @if (currentUser == null)
                            {
                                <li><a id="lnkLogin" onclick="onLoginClick()">Login</a></li>
                                @*<li>@Html.ActionLink("Register", "Register", "User")</li>*@
                            }
                            else
                            {
                                UserRole role = (UserRole)currentUser.RoleId;
                                <li>
                                    @Html.Raw("Account")
                                    <ul style="left:0%">
                                        <li><a id="lnkEditCurrentUserProfile" onclick="onEditCurrentUserProfileClick()">@string.Format("User: {0}", currentUser.UserName)</a></li>
                                        <br />
                                        <li><a id="lnkEditCurrentUserPassword" onclick="onEditCurrentUserPasswordClick()">@string.Format("Change Password")</a></li>
                                        <br />
                                        <hr />
                                        <li><a id="lnkEditCurrentOrganizationProfile" onclick="onEditCurrentOrganizationProfileClick()">@string.Format("Organization: {0}", currentOrganization.Name)</a></li>
                                        <br />
                                        <hr />
                                        <li style="color:white">@Html.ActionLink("Log Off", "LogOff", "User")</li>
                                    </ul>
                                </li>
                                <li>
                                    @Html.Raw("SMS")
                                    <ul style="left:4.5%">
                                        <li>@Html.ActionLink("Sent", "Index", "SmsSent")</li>
                                        <br />
                                        <li>@Html.ActionLink("Received", "Index", "SmsReceived")</li>
                                        <br />
                                        <hr />
                                        <li>@Html.ActionLink("Campaigns", "Index", "SmsCampaign", new { organizationId = currentOrganization.OrganizationId }, null)</li>
                                        <br />
                                        <li>@Html.ActionLink("Message Templates", "Index", "SmsMessageTemplate", new { organizationId = currentOrganization.OrganizationId }, null)</li>
                                        <br />
                                        <hr />
                                        <li><a id="lnkSendSms" onclick="onSendSmsClick()">Send Sms</a></li>
                                    </ul>
                                </li>
                                if (role == UserRole.Administrator)
                                {
                                    <li>
                                        @Html.Raw("Manage")
                                        <ul style="left:7.0%">
                                            @if(currentOrganization != null)
                                            {
                                                <li>@Html.ActionLink("Subscriptions", "Index", "OrganizationSubscription", new { organizationId = currentOrganization.OrganizationId }, null)</li>
                                                <br />
                                                <li>@Html.ActionLink("Schedule Entries", "Index", "OrganizationScheduleEntry", new { organizationId = currentOrganization.OrganizationId }, null)</li>
                                                <br />
                                                <hr />
                                            }
                                            <li>@Html.ActionLink("Organizations", "Index", "Organization")</li>
                                            <br />
                                            <li><a id="lnkManageOrganizationUsers" onclick="onManageOrganizationUsersClick()">@Html.Raw(string.Format("Users"))</a></li>
                                            <br />
                                            <li>@Html.ActionLink("Users (all)", "Index", "User")</li>
                                            <br />
                                            <li>@Html.ActionLink("Subscribers", "Index", "Subscriber")</li>

                                        </ul>
                                    </li>
                                    <li>
                                        @Html.Raw("Tools")
                                        <ul style="left:11.5%">
                                            <li>@Html.ActionLink("Processors", "Index", "Processor")</li>
                                            <br />
                                            <li>@Html.ActionLink("SMS Send Queue", "Index", "SmsSentQueueItem")</li>
                                            <br />
                                            <li>@Html.ActionLink("Web Requests", "Index", "WebRequestActivity")</li>
                                            <br />
                                            <hr />
                                            <li>@Html.ActionLink("Global Settings", "Index", "GlobalSetting")</li>
                                            <br />
                                            <li>@Html.ActionLink("Country Settings", "Index", "Country")</li>
                                        </ul>
                                    </li>
                                    <li style="color:#ba0c0c" id="menuBalance">
                                        @Html.Raw(string.Format("SMS Credits: {0}", currentOrganization.SmsCreditsBalance))
                                    </li>
                                }
                                else
                                {
                                    <li>
                                        @Html.Raw("Manage")
                                        <ul style="left:7.0%">
                                            @if (currentOrganization != null)
                                            {
                                                <li>@Html.ActionLink("Subscriptions", "Index", "OrganizationSubscription", new { organizationId = currentOrganization.OrganizationId }, null)</li>
                                                <br />
                                                <li>@Html.ActionLink("Schedule Entries", "Index", "OrganizationScheduleEntry", new { organizationId = currentOrganization.OrganizationId }, null)</li>
                                                if (role == UserRole.OrganizationAdmin)
                                                {
                                                    <br />
                                                    <hr />
                                                    <li><a id="lnkManageOrganizationUsers" onclick="onManageOrganizationUsersClick()">@Html.Raw(string.Format("Users"))</a></li>
                                                    <br />
                                                }
                                            }
                                        </ul>
                                    </li>
                                    <li style="color:#ba0c0c" id="menuBalance">
                                        @Html.Raw(string.Format("SMS Credits: {0}", currentOrganization.SmsCreditsBalance))
                                    </li>
                                }
                            }
                        </ul>
                    </nav>
                </div>
                <div class="float-right">
                    <nav>
                        <ul id="menu">
                            <li>
                                @Html.ActionLink("Home", "Index", "Home")
                            </li>
                            <li>
                                @Html.ActionLink("My Subscriptions", "ViewSubscriberSubscriptions", "SubscriberSubscription")
                            </li>
                            <li>
                                @{
                                    string useCasesAnchor = "#use-cases";
                                    string useCasesUrl = Url.Action("Index", "Home") + useCasesAnchor;
                                    if (currentController == "Home" && currentAction == "Index") //Visiter is on the home page.
                                    {
                                        useCasesUrl = useCasesAnchor;
                                    }
                                    <a href="@useCasesUrl">Use Cases</a>
                                }
                            </li>
                            <li>
                                @{
                                    string featuresAnchor = "#features";
                                    string featuresUrl = Url.Action("Index", "Home") + featuresAnchor;
                                    if(currentController == "Home" && currentAction == "Index") //Visiter is on the home page.
                                    {
                                        featuresUrl = featuresAnchor;
                                    }
                                    <a href="@featuresUrl">Features</a>
                                }
                            </li>
                            <li>
                                @{
                                    string servicesAnchor = "#services";
                                    string servicesUrl = Url.Action("Index", "Home") + servicesAnchor;
                                    if(currentController == "Home" && currentAction == "Index") //Visiter is on the home page.
                                    {
                                        servicesUrl = servicesAnchor;
                                    }
                                    <a href="@servicesUrl">Services</a>
                                }
                            </li>
                            <li>
                                @{
                                    string contactAnchor = "#contact";
                                    string contactUrl = Url.Action("Index", "Home") + contactAnchor;
                                    if(currentController == "Home" && currentAction == "Index") //Visiter is on the home page.
                                    {
                                        contactUrl = contactAnchor;
                                    }
                                    <a href="@contactUrl">Contact</a>
                                }
                            </li>
                            <li>
                                @{
                                    string aboutAnchor = "#about";
                                    string aboutUrl = Url.Action("Index", "Home") + aboutAnchor;
                                    if(currentController == "Home" && currentAction == "Index") //Visiter is on the home page.
                                    {
                                        aboutUrl = aboutAnchor;
                                    }
                                    <a href="@aboutUrl">About</a>
                                }
                            </li>
                        </ul>
                    </nav>
                </div>
            </div>
        </header>
        <div id="body">
            @RenderSection("featured", required: false)
            <section class="featured">
                <div class="content-wrapper">
                    <div class="logoimagebanner">
                        <a href="@Url.Action("Index", "Home")" style="background-color:transparent">
                            @*<img src="~/Images/FiglutLogo/logo_small.png" style="width:110%; margin-top:10px; border:none" />*@
                            <img src="~/Images/FiglutRepeatLogo/Figlut-AppLogo-FINAL-White.png" style="width:110%; margin-top:-15%; border:none" />
                        </a>
                    </div>
                </div>
            </section>
            <section class="content-wrapper main-content clear-fix">
                @RenderBody()
            </section>
        </div>
        <footer>
            <div class="content-wrapper">
                <div class="centerInformation" style="color:#3195c2; text-align:center">
                    <p>&copy; @(string.Format("{0} - {1}", DateTime.Now.Year.ToString(), RepeatWebApp.Instance.Settings.ApplicationName))</p>
                </div>
            </div>
        </footer>

        @*Used for Ajax calls to do partial form updates.*@
        @Scripts.Render("~/bundles/jqueryval")

        @RenderSection("scripts", required: false)
        <script type="text/javascript">
            $(function () {
                $("ul#menu li").each(function () {
                    if ($(this).find("ul").length > 0) {

                        //show subnav on hover
                        $(this).mouseenter(function () {
                            $(this).find("ul").stop(true, true).slideDown();
                        });

                        //hide submenus on exit
                        $(this).mouseleave(function () {
                            $(this).find("ul").stop(true, true).slideUp();
                        });

                        $(this).find("ul").mousemove(function () {
                            $(this).stop(true, true).show();
                        });
                    }
                });
            });

            function onLoginClick() {
                showDialog(
                    '#divLogin',
                    '#dlgLogin',
                    'LoginDialog',
                    'User',
                    '',
                    '@null');
            }

            function onSendSmsClick() {
                showDialog(
                    '#divSendSmsDialog',
                    '#dlgSendSmsDialog',
                    'SendSms',
                    'SmsSent',
                    '',
                    '@null');
            }

            function onEditCurrentUserProfileClick() {
                showDialog(
                    '#divEditUserProfile',
                    '#dlgEditUserProfile',
                    'EditProfileDialog',
                    'User',
                    '',
                    '@null');
            }

            function onEditCurrentUserPasswordClick() {
                var currentUserId = '@(currentUser != null ? currentUser.UserId.ToString() : string.Empty)';
                if (currentUserId == '') {
                    return;
                }
                showDialog(
                    '#divEditUserPassword',
                    '#dlgEditUserPassword',
                    'EditUserPasswordDialog',
                    'User',
                    'userId',
                    currentUserId);
            }

            function onEditCurrentOrganizationProfileClick() {
                showDialog(
                    '#divEditOrganizationProfile',
                    '#dlgEditOrganizationProfile',
                    'EditProfileDialog',
                    'Organization',
                    '',
                    '@null');
            }

            function onManageOrganizationUsersClick() {
                var currentOrganizationId = '@(currentOrganization != null ? currentOrganization.OrganizationId.ToString() : string.Empty)';
                var currentUserRole = '@(currentUser != null ? ((UserRole)currentUser.RoleId).ToString() : string.Empty)';
                var administratorRole = '@UserRole.Administrator.ToString()';
                var organizationAdministratorRole = '@UserRole.OrganizationAdmin.ToString()';
                if (currentOrganizationId == '' || (currentUserRole != administratorRole && currentUserRole != organizationAdministratorRole)) {
                    return;
                }
                var downloadUrl = '@Url.Action("Index", "User", new { organizationId = "_organizationId" })';
                downloadUrl = downloadUrl.replace('_organizationId', currentOrganizationId);
                window.location = downloadUrl;
            }

            function refreshSmsCreditsBalanceMenu() {
                var postBackUrl = '@Url.Action("GetCurrentOrganizationSmsCreditsBalance", "Organization")';
                $.ajax({
                    url: postBackUrl,
                    type: 'POST',
                    success: function (data) {
                        if (data.Success) {
                            $('#menuBalance').text(data.ErrorMsg);
                        } else {
                            alert(data.ErrorMsg);
                        }
                    }
                })
            }

            @if (Convert.ToBoolean(RepeatWebApp.Instance.GlobalSettings[GlobalSettingName.EnableGoogleAnalytics].SettingValue))
            {
                <text>
                    (function (i, s, o, g, r, a, m) {
                        i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
                            (i[r].q = i[r].q || []).push(arguments)
                        }, i[r].l = 1 * new Date(); a = s.createElement(o),
                            m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
                    })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');

                    ga('create', 'UA-98631502-1', 'auto');
                    ga('send', 'pageview');
                </text>
            }
        </script>
    </body>
</html>
