@model Figlut.Repeat.Web.Site.Models.OrganizationProfileModel

<div id="dlgEditOrganizationProfile">
    <img src="~/Images/Icons/red-edit32.png" style="float:right; margin-right:1%; margin-left:1%" />
    <div class="centerForm">
        <form id="EditOrganizationProfileForm">
            @Html.ValidationSummary(true, "Failed to edit profile.")
            <fieldset>
                <legend>Confirmation Form</legend>
                @Html.HiddenFor(m => m.OrganizationId)
                @Html.HiddenFor(m => m.SmsCreditsBalance)
                @Html.HiddenFor(m => m.AllowSmsCreditsDebt)
                @Html.HiddenFor(m => m.OrganizationSubscriptionEnabled)
                @Html.HiddenFor(m => m.OrganizationSubscriptionTypeId)
                @Html.HiddenFor(m => m.OrganizationSubscriptionEnabled)
                @Html.HiddenFor(m => m.BillingDayOfTheMonth)
                @Html.HiddenFor(m => m.AccountManagerUserId)
                @Html.HiddenFor(m => m.AccountManagerUserName)
                @Html.HiddenFor(m => m.DateCreated)
                <div class="field-label">
                    @Html.Raw("Name")
                </div>
                <div class="editor-field">
                    @Html.EditorFor(m => m.OrganizationName)
                    @Html.ValidationMessageFor(m => m.OrganizationName)
                </div>
                <div class="field-label">
                    @Html.Raw("Identifier")
                </div>
                <div class="editor-field">
                    @Html.EditorFor(m => m.OrganizationIdentifier)
                    @Html.ValidationMessageFor(m => m.OrganizationIdentifier)
                </div>
                <div class="field-label">
                    @Html.Raw("Primary Contact Email Address")
                </div>
                <div class="editor-field">
                    @Html.EditorFor(m => m.OrganizationPrimaryContactEmailAddress)
                    @Html.ValidationMessageFor(m => m.OrganizationPrimaryContactEmailAddress)
                </div>
                <div class="field-label">
                    @Html.Raw("Primary Contact Name *")
                </div>
                <div class="editor-field-dialog">
                    @Html.EditorFor(m => m.OrganizationPrimaryContactName)
                    @Html.ValidationMessageFor(m => m.OrganizationPrimaryContactName)
                </div>
                <div class="field-label">
                    @Html.Raw("Primary Contact Phone Number")
                </div>
                <div class="editor-field-dialog">
                    @Html.EditorFor(m => m.OrganizationPrimaryContactPhoneNumber)
                    @Html.ValidationMessageFor(m => m.OrganizationPrimaryContactPhoneNumber)
                </div>
                <div class="field-label">
                    @Html.Raw("Address")
                </div>
                <div class="editor-field">
                    @Html.EditorFor(m => m.OrganizationAddress)
                    @Html.ValidationMessageFor(m => m.OrganizationAddress)
                </div>
                <hr />
                <div class="field-label">
                    @Html.Raw("Enable Email Notifications")
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(m => m.OrganizationEnableEmailNotifications, new SelectList(
                        new[]
                        {
                            new { Value = "true", Text = "Yes" },
                            new { Value = "false", Text = "No" },
                        },
                        "Value",
                        "Text",
                        Model
                    ),
                    new { @class = "drop-down-field" })
                    @Html.ValidationMessageFor(m => m.OrganizationEnableEmailNotifications, "Enable Email Notifications.")
                </div>
                <div class="field-label">
                    @Html.Raw("Automatically Send Schedule Entries SMS")
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(m => m.AutomaticallySendDailyScheduleEntriesSms, new SelectList(
                        new[]
                        {
                            new { Value = "true", Text = "Yes" },
                            new { Value = "false", Text = "No" },
                        },
                        "Value",
                        "Text",
                        Model
                    ),
                    new { @class = "drop-down-field" })
                    @Html.ValidationMessageFor(m => m.AutomaticallySendDailyScheduleEntriesSms, "Automatically Send Daily Schedule Entries Sms.")
                </div>
                <div class="field-label">
                    @Html.Raw("Enable Daily Schedule Entries Email Notifications")
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(m => m.EnableDailyScheduleEntriesEmailNotifications, new SelectList(
                        new[]
                        {
                            new { Value = "true", Text = "Yes" },
                            new { Value = "false", Text = "No" },
                        },
                        "Value",
                        "Text",
                        Model
                    ),
                    new { @class = "drop-down-field" })
                    @Html.ValidationMessageFor(m => m.EnableDailyScheduleEntriesEmailNotifications, "Enable Daily Schedule Entries Email Notifications.")
                </div>
                <div class="field-label">
                    @Html.Raw("Send Daily Schedule Entries Email Notification On Zero Entries")
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(m => m.SendDailyScheduleEntriesEmailNotificationOnZeroEntries, new SelectList(
                        new[]
                        {
                            new { Value = "true", Text = "Yes" },
                            new { Value = "false", Text = "No" },
                        },
                        "Value",
                        "Text",
                        Model
                    ),
                    new { @class = "drop-down-field" })
                    @Html.ValidationMessageFor(m => m.SendDailyScheduleEntriesEmailNotificationOnZeroEntries, "Send Daily Schedule Entries Email Notification On Zero Entries.")
                </div>
                <div class="field-label">
                    @Html.Raw("Daily Schedule Entries Email Notification Time")
                </div>
                <div class="editor-field">
                    @Html.EditorFor(m => m.DailyScheduleEntriesEmailNotificationTime)
                    @Html.ValidationMessageFor(m => m.DailyScheduleEntriesEmailNotificationTime)
                </div>
                <hr />
                <div class="field-label">
                    @Html.Raw("Monday (working Day)?")
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(m => m.IsMondayWorkDay, new SelectList(
                        new[]
                        {
                            new { Value = "true", Text = "Yes" },
                            new { Value = "false", Text = "No" },
                        },
                        "Value",
                        "Text",
                        Model
                    ),
                    new { @class = "drop-down-field" })
                    @Html.ValidationMessageFor(m => m.IsMondayWorkDay, "Is Monday Working Day is required.")
                </div>
                <div class="field-label">
                    @Html.Raw("Tuesday (working Day)?")
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(m => m.IsTuesdayWorkDay, new SelectList(
                        new[]
                        {
                            new { Value = "true", Text = "Yes" },
                            new { Value = "false", Text = "No" },
                        },
                        "Value",
                        "Text",
                        Model
                    ),
                    new { @class = "drop-down-field" })
                    @Html.ValidationMessageFor(m => m.IsTuesdayWorkDay, "Is Tuesday Working Day is required.")
                </div>
                <div class="field-label">
                    @Html.Raw("Wednesday (working Day)?")
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(m => m.IsWednesdayWorkDay, new SelectList(
                        new[]
                        {
                            new { Value = "true", Text = "Yes" },
                            new { Value = "false", Text = "No" },
                        },
                        "Value",
                        "Text",
                        Model
                    ),
                    new { @class = "drop-down-field" })
                    @Html.ValidationMessageFor(m => m.IsWednesdayWorkDay, "Is Wednesday Working Day is required.")
                </div>
                <div class="field-label">
                    @Html.Raw("Thursday (working Day)?")
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(m => m.IsThursdayWorkDay, new SelectList(
                        new[]
                        {
                            new { Value = "true", Text = "Yes" },
                            new { Value = "false", Text = "No" },
                        },
                        "Value",
                        "Text",
                        Model
                    ),
                    new { @class = "drop-down-field" })
                    @Html.ValidationMessageFor(m => m.IsThursdayWorkDay, "Is Thursday Working Dayis required.")
                </div>
                <div class="field-label">
                    @Html.Raw("Friday (working Day)?")
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(m => m.IsFridayWorkDay, new SelectList(
                        new[]
                        {
                            new { Value = "true", Text = "Yes" },
                            new { Value = "false", Text = "No" },
                        },
                        "Value",
                        "Text",
                        Model
                    ),
                    new { @class = "drop-down-field" })
                    @Html.ValidationMessageFor(m => m.IsFridayWorkDay, "Is Friday Working Dayis required.")
                </div>
                <div class="field-label">
                    @Html.Raw("Saturday (working Day)?")
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(m => m.IsSaturdayWorkDay, new SelectList(
                        new[]
                        {
                            new { Value = "true", Text = "Yes" },
                            new { Value = "false", Text = "No" },
                        },
                        "Value",
                        "Text",
                        Model
                    ),
                    new { @class = "drop-down-field" })
                    @Html.ValidationMessageFor(m => m.IsSaturdayWorkDay, "Is Saturday Working Day is required.")
                </div>
                <div class="field-label">
                    @Html.Raw("Sunday (working Day)?")
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(m => m.IsSundayWorkDay, new SelectList(
                        new[]
                        {
                            new { Value = "true", Text = "Yes" },
                            new { Value = "false", Text = "No" },
                        },
                        "Value",
                        "Text",
                        Model
                    ),
                    new { @class = "drop-down-field" })
                    @Html.ValidationMessageFor(m => m.IsSundayWorkDay, "Is Sunday Working Day is required.")
                </div>
                <hr />
                <div class="field-label">
                    @Html.Raw("Billing day of the month")
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(m => m.BillingDayOfTheMonth, new { disabled = "disabled", @readonly = "readonly" })
                    @Html.ValidationMessageFor(m => m.BillingDayOfTheMonth)
                </div>
                <div class="field-label">
                    @Html.Raw("Outstanding Balance")
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(m => m.OutstandingBalance, new { disabled = "disabled", @readonly = "readonly" })
                    @Html.ValidationMessageFor(m => m.OutstandingBalance)
                </div>
                <div class="field-label">
                    @Html.Raw("Account Manager User")
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(m => m.AccountManagerUserName, new { disabled = "disabled", @readonly = "readonly" })
                    @Html.ValidationMessageFor(m => m.AccountManagerUserName)
                </div>
                <div class="field-label">
                    @Html.Raw("Account Manager Email Address")
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(m => m.AccountManagerEmailAddress, new { disabled = "disabled", @readonly = "readonly" })
                    @Html.ValidationMessageFor(m => m.AccountManagerEmailAddress)
                </div>
                <div class="field-label">
                    @Html.Raw("Account Manager Cell Phone Number")
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(m => m.AccountManagerCellPhoneNumber, new { disabled = "disabled", @readonly = "readonly" })
                    @Html.ValidationMessageFor(m => m.AccountManagerCellPhoneNumber)
                </div>
                <br />
                <div id="EditOrganizationProfileErrorField" style="color:#8A0808"></div>
            </fieldset>
        </form>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        var dialogName = '#dlgEditOrganizationProfile';
        createDialog(dialogName, 'Edit Organization Profile', onConfirmOK, onConfirmOpen, onConfirmCancel, 500, 700);
    });

    function onConfirmOK() {
        var dialogName = '#dlgEditOrganizationProfile';
        var postBackUrl = '@Url.Action("EditProfileDialog", "Organization")';
        $.ajax({
            url: postBackUrl,
            type: 'POST',
            data: $("#EditOrganizationProfileForm").serialize(),
            success: function (data) {
                if (data.Success) {
                    $(dialogName).dialog("close");
                } else {
                    $("#EditOrganizationProfileErrorField").html(data.ErrorMsg);
                }
            }
        })
    };

    function onConfirmOpen() {

    }

    function onConfirmCancel() {
        //$('#confirmation-message').val('');
        $("#EditOrganizationProfileErrorField").html('');
    }
</script>