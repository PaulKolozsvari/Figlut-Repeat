#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Figlut.Spread.ORM
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FiglutSpread")]
	public partial class FiglutSpreadDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEmailLog(EmailLog instance);
    partial void UpdateEmailLog(EmailLog instance);
    partial void DeleteEmailLog(EmailLog instance);
    partial void InsertWebRequestActivity(WebRequestActivity instance);
    partial void UpdateWebRequestActivity(WebRequestActivity instance);
    partial void DeleteWebRequestActivity(WebRequestActivity instance);
    partial void InsertGlobalSetting(GlobalSetting instance);
    partial void UpdateGlobalSetting(GlobalSetting instance);
    partial void DeleteGlobalSetting(GlobalSetting instance);
    partial void InsertInvoice(Invoice instance);
    partial void UpdateInvoice(Invoice instance);
    partial void DeleteInvoice(Invoice instance);
    partial void InsertInvoiceItem(InvoiceItem instance);
    partial void UpdateInvoiceItem(InvoiceItem instance);
    partial void DeleteInvoiceItem(InvoiceItem instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertOrganizationSubscriptionType(OrganizationSubscriptionType instance);
    partial void UpdateOrganizationSubscriptionType(OrganizationSubscriptionType instance);
    partial void DeleteOrganizationSubscriptionType(OrganizationSubscriptionType instance);
    partial void InsertServerAction(ServerAction instance);
    partial void UpdateServerAction(ServerAction instance);
    partial void DeleteServerAction(ServerAction instance);
    partial void InsertServerError(ServerError instance);
    partial void UpdateServerError(ServerError instance);
    partial void DeleteServerError(ServerError instance);
    partial void InsertSmsCampaign(SmsCampaign instance);
    partial void UpdateSmsCampaign(SmsCampaign instance);
    partial void DeleteSmsCampaign(SmsCampaign instance);
    partial void InsertSmsDeliveryReportLog(SmsDeliveryReportLog instance);
    partial void UpdateSmsDeliveryReportLog(SmsDeliveryReportLog instance);
    partial void DeleteSmsDeliveryReportLog(SmsDeliveryReportLog instance);
    partial void InsertSmsMessageTemplate(SmsMessageTemplate instance);
    partial void UpdateSmsMessageTemplate(SmsMessageTemplate instance);
    partial void DeleteSmsMessageTemplate(SmsMessageTemplate instance);
    partial void InsertSmsProcessor(SmsProcessor instance);
    partial void UpdateSmsProcessor(SmsProcessor instance);
    partial void DeleteSmsProcessor(SmsProcessor instance);
    partial void InsertSmsProcessorLog(SmsProcessorLog instance);
    partial void UpdateSmsProcessorLog(SmsProcessorLog instance);
    partial void DeleteSmsProcessorLog(SmsProcessorLog instance);
    partial void InsertSmsReceivedLog(SmsReceivedLog instance);
    partial void UpdateSmsReceivedLog(SmsReceivedLog instance);
    partial void DeleteSmsReceivedLog(SmsReceivedLog instance);
    partial void InsertSmsReceivedQueueItem(SmsReceivedQueueItem instance);
    partial void UpdateSmsReceivedQueueItem(SmsReceivedQueueItem instance);
    partial void DeleteSmsReceivedQueueItem(SmsReceivedQueueItem instance);
    partial void InsertSmsSentLog(SmsSentLog instance);
    partial void UpdateSmsSentLog(SmsSentLog instance);
    partial void DeleteSmsSentLog(SmsSentLog instance);
    partial void InsertSmsSentQueueItem(SmsSentQueueItem instance);
    partial void UpdateSmsSentQueueItem(SmsSentQueueItem instance);
    partial void DeleteSmsSentQueueItem(SmsSentQueueItem instance);
    partial void InsertSubscriber(Subscriber instance);
    partial void UpdateSubscriber(Subscriber instance);
    partial void DeleteSubscriber(Subscriber instance);
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertPublicHoliday(PublicHoliday instance);
    partial void UpdatePublicHoliday(PublicHoliday instance);
    partial void DeletePublicHoliday(PublicHoliday instance);
    partial void InsertSubscription(Subscription instance);
    partial void UpdateSubscription(Subscription instance);
    partial void DeleteSubscription(Subscription instance);
    partial void InsertScheduleEntry(ScheduleEntry instance);
    partial void UpdateScheduleEntry(ScheduleEntry instance);
    partial void DeleteScheduleEntry(ScheduleEntry instance);
    partial void InsertOrganization(Organization instance);
    partial void UpdateOrganization(Organization instance);
    partial void DeleteOrganization(Organization instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertSchedule(Schedule instance);
    partial void UpdateSchedule(Schedule instance);
    partial void DeleteSchedule(Schedule instance);
    #endregion
		
		public FiglutSpreadDataContext() : 
				base(global::Figlut.Spread.ORM.Properties.Settings.Default.FiglutSpreadConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public FiglutSpreadDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FiglutSpreadDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FiglutSpreadDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FiglutSpreadDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<EmailLog> EmailLogs
		{
			get
			{
				return this.GetTable<EmailLog>();
			}
		}
		
		public System.Data.Linq.Table<WebRequestActivity> WebRequestActivities
		{
			get
			{
				return this.GetTable<WebRequestActivity>();
			}
		}
		
		public System.Data.Linq.Table<GlobalSetting> GlobalSettings
		{
			get
			{
				return this.GetTable<GlobalSetting>();
			}
		}
		
		public System.Data.Linq.Table<Invoice> Invoices
		{
			get
			{
				return this.GetTable<Invoice>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceItem> InvoiceItems
		{
			get
			{
				return this.GetTable<InvoiceItem>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<OrderItem> OrderItems
		{
			get
			{
				return this.GetTable<OrderItem>();
			}
		}
		
		public System.Data.Linq.Table<OrganizationSubscriptionType> OrganizationSubscriptionTypes
		{
			get
			{
				return this.GetTable<OrganizationSubscriptionType>();
			}
		}
		
		public System.Data.Linq.Table<ServerAction> ServerActions
		{
			get
			{
				return this.GetTable<ServerAction>();
			}
		}
		
		public System.Data.Linq.Table<ServerError> ServerErrors
		{
			get
			{
				return this.GetTable<ServerError>();
			}
		}
		
		public System.Data.Linq.Table<SmsCampaign> SmsCampaigns
		{
			get
			{
				return this.GetTable<SmsCampaign>();
			}
		}
		
		public System.Data.Linq.Table<SmsDeliveryReportLog> SmsDeliveryReportLogs
		{
			get
			{
				return this.GetTable<SmsDeliveryReportLog>();
			}
		}
		
		public System.Data.Linq.Table<SmsMessageTemplate> SmsMessageTemplates
		{
			get
			{
				return this.GetTable<SmsMessageTemplate>();
			}
		}
		
		public System.Data.Linq.Table<SmsProcessor> SmsProcessors
		{
			get
			{
				return this.GetTable<SmsProcessor>();
			}
		}
		
		public System.Data.Linq.Table<SmsProcessorLog> SmsProcessorLogs
		{
			get
			{
				return this.GetTable<SmsProcessorLog>();
			}
		}
		
		public System.Data.Linq.Table<SmsReceivedLog> SmsReceivedLogs
		{
			get
			{
				return this.GetTable<SmsReceivedLog>();
			}
		}
		
		public System.Data.Linq.Table<SmsReceivedQueueItem> SmsReceivedQueueItems
		{
			get
			{
				return this.GetTable<SmsReceivedQueueItem>();
			}
		}
		
		public System.Data.Linq.Table<SmsSentLog> SmsSentLogs
		{
			get
			{
				return this.GetTable<SmsSentLog>();
			}
		}
		
		public System.Data.Linq.Table<SmsSentQueueItem> SmsSentQueueItems
		{
			get
			{
				return this.GetTable<SmsSentQueueItem>();
			}
		}
		
		public System.Data.Linq.Table<Subscriber> Subscribers
		{
			get
			{
				return this.GetTable<Subscriber>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<PublicHoliday> PublicHolidays
		{
			get
			{
				return this.GetTable<PublicHoliday>();
			}
		}
		
		public System.Data.Linq.Table<Subscription> Subscriptions
		{
			get
			{
				return this.GetTable<Subscription>();
			}
		}
		
		public System.Data.Linq.Table<ScheduleEntry> ScheduleEntries
		{
			get
			{
				return this.GetTable<ScheduleEntry>();
			}
		}
		
		public System.Data.Linq.Table<Organization> Organizations
		{
			get
			{
				return this.GetTable<Organization>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Schedule> Schedules
		{
			get
			{
				return this.GetTable<Schedule>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmailLog")]
	public partial class EmailLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _EmailLogId;
		
		private int _ErrorCode;
		
		private string _ErrorMessage;
		
		private string _EmailAddress;
		
		private string _MessageContents;
		
		private string _TableReference;
		
		private System.Nullable<System.Guid> _RecordReference;
		
		private string _Tag;
		
		private int _EmailProviderCode;
		
		private System.DateTime _DateCreated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmailLogIdChanging(System.Guid value);
    partial void OnEmailLogIdChanged();
    partial void OnErrorCodeChanging(int value);
    partial void OnErrorCodeChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnMessageContentsChanging(string value);
    partial void OnMessageContentsChanged();
    partial void OnTableReferenceChanging(string value);
    partial void OnTableReferenceChanged();
    partial void OnRecordReferenceChanging(System.Nullable<System.Guid> value);
    partial void OnRecordReferenceChanged();
    partial void OnTagChanging(string value);
    partial void OnTagChanged();
    partial void OnEmailProviderCodeChanging(int value);
    partial void OnEmailProviderCodeChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public EmailLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailLogId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid EmailLogId
		{
			get
			{
				return this._EmailLogId;
			}
			set
			{
				if ((this._EmailLogId != value))
				{
					this.OnEmailLogIdChanging(value);
					this.SendPropertyChanging();
					this._EmailLogId = value;
					this.SendPropertyChanged("EmailLogId");
					this.OnEmailLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorCode", DbType="Int NOT NULL")]
		public int ErrorCode
		{
			get
			{
				return this._ErrorCode;
			}
			set
			{
				if ((this._ErrorCode != value))
				{
					this.OnErrorCodeChanging(value);
					this.SendPropertyChanging();
					this._ErrorCode = value;
					this.SendPropertyChanged("ErrorCode");
					this.OnErrorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="VarChar(MAX)")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(250)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageContents", DbType="VarChar(MAX)")]
		public string MessageContents
		{
			get
			{
				return this._MessageContents;
			}
			set
			{
				if ((this._MessageContents != value))
				{
					this.OnMessageContentsChanging(value);
					this.SendPropertyChanging();
					this._MessageContents = value;
					this.SendPropertyChanged("MessageContents");
					this.OnMessageContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableReference", DbType="VarChar(50)")]
		public string TableReference
		{
			get
			{
				return this._TableReference;
			}
			set
			{
				if ((this._TableReference != value))
				{
					this.OnTableReferenceChanging(value);
					this.SendPropertyChanging();
					this._TableReference = value;
					this.SendPropertyChanged("TableReference");
					this.OnTableReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordReference", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RecordReference
		{
			get
			{
				return this._RecordReference;
			}
			set
			{
				if ((this._RecordReference != value))
				{
					this.OnRecordReferenceChanging(value);
					this.SendPropertyChanging();
					this._RecordReference = value;
					this.SendPropertyChanged("RecordReference");
					this.OnRecordReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tag", DbType="VarChar(MAX)")]
		public string Tag
		{
			get
			{
				return this._Tag;
			}
			set
			{
				if ((this._Tag != value))
				{
					this.OnTagChanging(value);
					this.SendPropertyChanging();
					this._Tag = value;
					this.SendPropertyChanged("Tag");
					this.OnTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailProviderCode", DbType="Int NOT NULL")]
		public int EmailProviderCode
		{
			get
			{
				return this._EmailProviderCode;
			}
			set
			{
				if ((this._EmailProviderCode != value))
				{
					this.OnEmailProviderCodeChanging(value);
					this.SendPropertyChanging();
					this._EmailProviderCode = value;
					this.SendPropertyChanged("EmailProviderCode");
					this.OnEmailProviderCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WebRequestActivity")]
	public partial class WebRequestActivity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _WebRequestActivityId;
		
		private string _RequestVerb;
		
		private string _RequestUrl;
		
		private string _RequestReferrerUrl;
		
		private string _Controller;
		
		private string _Action;
		
		private string _UserAgent;
		
		private string _UserHostAddress;
		
		private string _UserHostName;
		
		private string _ClientType;
		
		private System.Nullable<bool> _IsCrawler;
		
		private System.Nullable<bool> _IsMobileDevice;
		
		private string _MobileDeviceManufacturer;
		
		private string _MobileDeviceModel;
		
		private string _Platform;
		
		private System.Nullable<System.Guid> _UserId;
		
		private string _UserName;
		
		private string _SourceApplication;
		
		private string _Comments;
		
		private string _WhoIsStatus;
		
		private string _WhoIsCountry;
		
		private string _WhoIsCountryCode;
		
		private string _WhoIsRegion;
		
		private string _WhoIsRegionName;
		
		private string _WhoIsCity;
		
		private string _WhoIsZip;
		
		private string _WhoIsLatitude;
		
		private string _WhoIsLongitude;
		
		private string _WhoIsTimeZone;
		
		private string _WhoIsISP;
		
		private string _WhoIsOrg;
		
		private System.DateTime _DateCreated;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWebRequestActivityIdChanging(System.Guid value);
    partial void OnWebRequestActivityIdChanged();
    partial void OnRequestVerbChanging(string value);
    partial void OnRequestVerbChanged();
    partial void OnRequestUrlChanging(string value);
    partial void OnRequestUrlChanged();
    partial void OnRequestReferrerUrlChanging(string value);
    partial void OnRequestReferrerUrlChanged();
    partial void OnControllerChanging(string value);
    partial void OnControllerChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnUserAgentChanging(string value);
    partial void OnUserAgentChanged();
    partial void OnUserHostAddressChanging(string value);
    partial void OnUserHostAddressChanged();
    partial void OnUserHostNameChanging(string value);
    partial void OnUserHostNameChanged();
    partial void OnClientTypeChanging(string value);
    partial void OnClientTypeChanged();
    partial void OnIsCrawlerChanging(System.Nullable<bool> value);
    partial void OnIsCrawlerChanged();
    partial void OnIsMobileDeviceChanging(System.Nullable<bool> value);
    partial void OnIsMobileDeviceChanged();
    partial void OnMobileDeviceManufacturerChanging(string value);
    partial void OnMobileDeviceManufacturerChanged();
    partial void OnMobileDeviceModelChanging(string value);
    partial void OnMobileDeviceModelChanged();
    partial void OnPlatformChanging(string value);
    partial void OnPlatformChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnSourceApplicationChanging(string value);
    partial void OnSourceApplicationChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnWhoIsStatusChanging(string value);
    partial void OnWhoIsStatusChanged();
    partial void OnWhoIsCountryChanging(string value);
    partial void OnWhoIsCountryChanged();
    partial void OnWhoIsCountryCodeChanging(string value);
    partial void OnWhoIsCountryCodeChanged();
    partial void OnWhoIsRegionChanging(string value);
    partial void OnWhoIsRegionChanged();
    partial void OnWhoIsRegionNameChanging(string value);
    partial void OnWhoIsRegionNameChanged();
    partial void OnWhoIsCityChanging(string value);
    partial void OnWhoIsCityChanged();
    partial void OnWhoIsZipChanging(string value);
    partial void OnWhoIsZipChanged();
    partial void OnWhoIsLatitudeChanging(string value);
    partial void OnWhoIsLatitudeChanged();
    partial void OnWhoIsLongitudeChanging(string value);
    partial void OnWhoIsLongitudeChanged();
    partial void OnWhoIsTimeZoneChanging(string value);
    partial void OnWhoIsTimeZoneChanged();
    partial void OnWhoIsISPChanging(string value);
    partial void OnWhoIsISPChanged();
    partial void OnWhoIsOrgChanging(string value);
    partial void OnWhoIsOrgChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public WebRequestActivity()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebRequestActivityId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid WebRequestActivityId
		{
			get
			{
				return this._WebRequestActivityId;
			}
			set
			{
				if ((this._WebRequestActivityId != value))
				{
					this.OnWebRequestActivityIdChanging(value);
					this.SendPropertyChanging();
					this._WebRequestActivityId = value;
					this.SendPropertyChanged("WebRequestActivityId");
					this.OnWebRequestActivityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestVerb", DbType="VarChar(50)")]
		public string RequestVerb
		{
			get
			{
				return this._RequestVerb;
			}
			set
			{
				if ((this._RequestVerb != value))
				{
					this.OnRequestVerbChanging(value);
					this.SendPropertyChanging();
					this._RequestVerb = value;
					this.SendPropertyChanged("RequestVerb");
					this.OnRequestVerbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUrl", DbType="VarChar(2048)")]
		public string RequestUrl
		{
			get
			{
				return this._RequestUrl;
			}
			set
			{
				if ((this._RequestUrl != value))
				{
					this.OnRequestUrlChanging(value);
					this.SendPropertyChanging();
					this._RequestUrl = value;
					this.SendPropertyChanged("RequestUrl");
					this.OnRequestUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestReferrerUrl", DbType="VarChar(2048)")]
		public string RequestReferrerUrl
		{
			get
			{
				return this._RequestReferrerUrl;
			}
			set
			{
				if ((this._RequestReferrerUrl != value))
				{
					this.OnRequestReferrerUrlChanging(value);
					this.SendPropertyChanging();
					this._RequestReferrerUrl = value;
					this.SendPropertyChanged("RequestReferrerUrl");
					this.OnRequestReferrerUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Controller", DbType="VarChar(100)")]
		public string Controller
		{
			get
			{
				return this._Controller;
			}
			set
			{
				if ((this._Controller != value))
				{
					this.OnControllerChanging(value);
					this.SendPropertyChanging();
					this._Controller = value;
					this.SendPropertyChanged("Controller");
					this.OnControllerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="VarChar(100)")]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAgent", DbType="VarChar(MAX)")]
		public string UserAgent
		{
			get
			{
				return this._UserAgent;
			}
			set
			{
				if ((this._UserAgent != value))
				{
					this.OnUserAgentChanging(value);
					this.SendPropertyChanging();
					this._UserAgent = value;
					this.SendPropertyChanged("UserAgent");
					this.OnUserAgentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserHostAddress", DbType="VarChar(45)")]
		public string UserHostAddress
		{
			get
			{
				return this._UserHostAddress;
			}
			set
			{
				if ((this._UserHostAddress != value))
				{
					this.OnUserHostAddressChanging(value);
					this.SendPropertyChanging();
					this._UserHostAddress = value;
					this.SendPropertyChanged("UserHostAddress");
					this.OnUserHostAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserHostName", DbType="VarChar(50)")]
		public string UserHostName
		{
			get
			{
				return this._UserHostName;
			}
			set
			{
				if ((this._UserHostName != value))
				{
					this.OnUserHostNameChanging(value);
					this.SendPropertyChanging();
					this._UserHostName = value;
					this.SendPropertyChanged("UserHostName");
					this.OnUserHostNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientType", DbType="VarChar(50)")]
		public string ClientType
		{
			get
			{
				return this._ClientType;
			}
			set
			{
				if ((this._ClientType != value))
				{
					this.OnClientTypeChanging(value);
					this.SendPropertyChanging();
					this._ClientType = value;
					this.SendPropertyChanged("ClientType");
					this.OnClientTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCrawler", DbType="Bit")]
		public System.Nullable<bool> IsCrawler
		{
			get
			{
				return this._IsCrawler;
			}
			set
			{
				if ((this._IsCrawler != value))
				{
					this.OnIsCrawlerChanging(value);
					this.SendPropertyChanging();
					this._IsCrawler = value;
					this.SendPropertyChanged("IsCrawler");
					this.OnIsCrawlerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMobileDevice", DbType="Bit")]
		public System.Nullable<bool> IsMobileDevice
		{
			get
			{
				return this._IsMobileDevice;
			}
			set
			{
				if ((this._IsMobileDevice != value))
				{
					this.OnIsMobileDeviceChanging(value);
					this.SendPropertyChanging();
					this._IsMobileDevice = value;
					this.SendPropertyChanged("IsMobileDevice");
					this.OnIsMobileDeviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileDeviceManufacturer", DbType="VarChar(250)")]
		public string MobileDeviceManufacturer
		{
			get
			{
				return this._MobileDeviceManufacturer;
			}
			set
			{
				if ((this._MobileDeviceManufacturer != value))
				{
					this.OnMobileDeviceManufacturerChanging(value);
					this.SendPropertyChanging();
					this._MobileDeviceManufacturer = value;
					this.SendPropertyChanged("MobileDeviceManufacturer");
					this.OnMobileDeviceManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileDeviceModel", DbType="VarChar(250)")]
		public string MobileDeviceModel
		{
			get
			{
				return this._MobileDeviceModel;
			}
			set
			{
				if ((this._MobileDeviceModel != value))
				{
					this.OnMobileDeviceModelChanging(value);
					this.SendPropertyChanging();
					this._MobileDeviceModel = value;
					this.SendPropertyChanged("MobileDeviceModel");
					this.OnMobileDeviceModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Platform", DbType="VarChar(250)")]
		public string Platform
		{
			get
			{
				return this._Platform;
			}
			set
			{
				if ((this._Platform != value))
				{
					this.OnPlatformChanging(value);
					this.SendPropertyChanging();
					this._Platform = value;
					this.SendPropertyChanged("Platform");
					this.OnPlatformChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(250)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceApplication", DbType="VarChar(50)")]
		public string SourceApplication
		{
			get
			{
				return this._SourceApplication;
			}
			set
			{
				if ((this._SourceApplication != value))
				{
					this.OnSourceApplicationChanging(value);
					this.SendPropertyChanging();
					this._SourceApplication = value;
					this.SendPropertyChanged("SourceApplication");
					this.OnSourceApplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="VarChar(MAX)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhoIsStatus", DbType="VarChar(MAX)")]
		public string WhoIsStatus
		{
			get
			{
				return this._WhoIsStatus;
			}
			set
			{
				if ((this._WhoIsStatus != value))
				{
					this.OnWhoIsStatusChanging(value);
					this.SendPropertyChanging();
					this._WhoIsStatus = value;
					this.SendPropertyChanged("WhoIsStatus");
					this.OnWhoIsStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhoIsCountry", DbType="VarChar(250)")]
		public string WhoIsCountry
		{
			get
			{
				return this._WhoIsCountry;
			}
			set
			{
				if ((this._WhoIsCountry != value))
				{
					this.OnWhoIsCountryChanging(value);
					this.SendPropertyChanging();
					this._WhoIsCountry = value;
					this.SendPropertyChanged("WhoIsCountry");
					this.OnWhoIsCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhoIsCountryCode", DbType="VarChar(250)")]
		public string WhoIsCountryCode
		{
			get
			{
				return this._WhoIsCountryCode;
			}
			set
			{
				if ((this._WhoIsCountryCode != value))
				{
					this.OnWhoIsCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._WhoIsCountryCode = value;
					this.SendPropertyChanged("WhoIsCountryCode");
					this.OnWhoIsCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhoIsRegion", DbType="VarChar(250)")]
		public string WhoIsRegion
		{
			get
			{
				return this._WhoIsRegion;
			}
			set
			{
				if ((this._WhoIsRegion != value))
				{
					this.OnWhoIsRegionChanging(value);
					this.SendPropertyChanging();
					this._WhoIsRegion = value;
					this.SendPropertyChanged("WhoIsRegion");
					this.OnWhoIsRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhoIsRegionName", DbType="VarChar(250)")]
		public string WhoIsRegionName
		{
			get
			{
				return this._WhoIsRegionName;
			}
			set
			{
				if ((this._WhoIsRegionName != value))
				{
					this.OnWhoIsRegionNameChanging(value);
					this.SendPropertyChanging();
					this._WhoIsRegionName = value;
					this.SendPropertyChanged("WhoIsRegionName");
					this.OnWhoIsRegionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhoIsCity", DbType="VarChar(250)")]
		public string WhoIsCity
		{
			get
			{
				return this._WhoIsCity;
			}
			set
			{
				if ((this._WhoIsCity != value))
				{
					this.OnWhoIsCityChanging(value);
					this.SendPropertyChanging();
					this._WhoIsCity = value;
					this.SendPropertyChanged("WhoIsCity");
					this.OnWhoIsCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhoIsZip", DbType="VarChar(250)")]
		public string WhoIsZip
		{
			get
			{
				return this._WhoIsZip;
			}
			set
			{
				if ((this._WhoIsZip != value))
				{
					this.OnWhoIsZipChanging(value);
					this.SendPropertyChanging();
					this._WhoIsZip = value;
					this.SendPropertyChanged("WhoIsZip");
					this.OnWhoIsZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhoIsLatitude", DbType="VarChar(250)")]
		public string WhoIsLatitude
		{
			get
			{
				return this._WhoIsLatitude;
			}
			set
			{
				if ((this._WhoIsLatitude != value))
				{
					this.OnWhoIsLatitudeChanging(value);
					this.SendPropertyChanging();
					this._WhoIsLatitude = value;
					this.SendPropertyChanged("WhoIsLatitude");
					this.OnWhoIsLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhoIsLongitude", DbType="VarChar(250)")]
		public string WhoIsLongitude
		{
			get
			{
				return this._WhoIsLongitude;
			}
			set
			{
				if ((this._WhoIsLongitude != value))
				{
					this.OnWhoIsLongitudeChanging(value);
					this.SendPropertyChanging();
					this._WhoIsLongitude = value;
					this.SendPropertyChanged("WhoIsLongitude");
					this.OnWhoIsLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhoIsTimeZone", DbType="VarChar(250)")]
		public string WhoIsTimeZone
		{
			get
			{
				return this._WhoIsTimeZone;
			}
			set
			{
				if ((this._WhoIsTimeZone != value))
				{
					this.OnWhoIsTimeZoneChanging(value);
					this.SendPropertyChanging();
					this._WhoIsTimeZone = value;
					this.SendPropertyChanged("WhoIsTimeZone");
					this.OnWhoIsTimeZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhoIsISP", DbType="VarChar(250)")]
		public string WhoIsISP
		{
			get
			{
				return this._WhoIsISP;
			}
			set
			{
				if ((this._WhoIsISP != value))
				{
					this.OnWhoIsISPChanging(value);
					this.SendPropertyChanging();
					this._WhoIsISP = value;
					this.SendPropertyChanged("WhoIsISP");
					this.OnWhoIsISPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhoIsOrg", DbType="VarChar(250)")]
		public string WhoIsOrg
		{
			get
			{
				return this._WhoIsOrg;
			}
			set
			{
				if ((this._WhoIsOrg != value))
				{
					this.OnWhoIsOrgChanging(value);
					this.SendPropertyChanging();
					this._WhoIsOrg = value;
					this.SendPropertyChanged("WhoIsOrg");
					this.OnWhoIsOrgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WebRequestActivity", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteRule="SET NULL")]
		internal User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.WebRequestActivities.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.WebRequestActivities.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GlobalSetting")]
	public partial class GlobalSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _GlobalSettingId;
		
		private string _Category;
		
		private string _SettingName;
		
		private string _SettingValue;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _LastDateUpdated;
		
		private System.DateTime _DateCreated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGlobalSettingIdChanging(System.Guid value);
    partial void OnGlobalSettingIdChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnSettingNameChanging(string value);
    partial void OnSettingNameChanged();
    partial void OnSettingValueChanging(string value);
    partial void OnSettingValueChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLastDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastDateUpdatedChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public GlobalSetting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlobalSettingId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid GlobalSettingId
		{
			get
			{
				return this._GlobalSettingId;
			}
			set
			{
				if ((this._GlobalSettingId != value))
				{
					this.OnGlobalSettingIdChanging(value);
					this.SendPropertyChanging();
					this._GlobalSettingId = value;
					this.SendPropertyChanged("GlobalSettingId");
					this.OnGlobalSettingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SettingName
		{
			get
			{
				return this._SettingName;
			}
			set
			{
				if ((this._SettingName != value))
				{
					this.OnSettingNameChanging(value);
					this.SendPropertyChanging();
					this._SettingName = value;
					this.SendPropertyChanged("SettingName");
					this.OnSettingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingValue", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SettingValue
		{
			get
			{
				return this._SettingValue;
			}
			set
			{
				if ((this._SettingValue != value))
				{
					this.OnSettingValueChanging(value);
					this.SendPropertyChanging();
					this._SettingValue = value;
					this.SendPropertyChanged("SettingValue");
					this.OnSettingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastDateUpdated
		{
			get
			{
				return this._LastDateUpdated;
			}
			set
			{
				if ((this._LastDateUpdated != value))
				{
					this.OnLastDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastDateUpdated = value;
					this.SendPropertyChanged("LastDateUpdated");
					this.OnLastDateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice")]
	public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _InvoiceId;
		
		private long _InvoiceNumber;
		
		private System.Guid _OrderId;
		
		private System.Nullable<System.Guid> _CreatedByUserId;
		
		private string _CreatedByUserName;
		
		private System.Nullable<System.Guid> _OrganizationId;
		
		private System.DateTime _DateCreated;
		
		private EntitySet<InvoiceItem> _InvoiceItems;
		
		private EntityRef<Organization> _Organization;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIdChanging(System.Guid value);
    partial void OnInvoiceIdChanged();
    partial void OnInvoiceNumberChanging(long value);
    partial void OnInvoiceNumberChanged();
    partial void OnOrderIdChanging(System.Guid value);
    partial void OnOrderIdChanged();
    partial void OnCreatedByUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedByUserNameChanging(string value);
    partial void OnCreatedByUserNameChanged();
    partial void OnOrganizationIdChanging(System.Nullable<System.Guid> value);
    partial void OnOrganizationIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public Invoice()
		{
			this._InvoiceItems = new EntitySet<InvoiceItem>(new Action<InvoiceItem>(this.attach_InvoiceItems), new Action<InvoiceItem>(this.detach_InvoiceItems));
			this._Organization = default(EntityRef<Organization>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					this.OnInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceId = value;
					this.SendPropertyChanged("InvoiceId");
					this.OnInvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNumber", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this.OnInvoiceNumberChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNumber = value;
					this.SendPropertyChanged("InvoiceNumber");
					this.OnInvoiceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserName", DbType="VarChar(250)")]
		public string CreatedByUserName
		{
			get
			{
				return this._CreatedByUserName;
			}
			set
			{
				if ((this._CreatedByUserName != value))
				{
					this.OnCreatedByUserNameChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserName = value;
					this.SendPropertyChanged("CreatedByUserName");
					this.OnCreatedByUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OrganizationId
		{
			get
			{
				return this._OrganizationId;
			}
			set
			{
				if ((this._OrganizationId != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationId = value;
					this.SendPropertyChanged("OrganizationId");
					this.OnOrganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceItem", Storage="_InvoiceItems", ThisKey="InvoiceId", OtherKey="InvoiceId")]
		public EntitySet<InvoiceItem> InvoiceItems
		{
			get
			{
				return this._InvoiceItems;
			}
			set
			{
				this._InvoiceItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_Invoice", Storage="_Organization", ThisKey="OrganizationId", OtherKey="OrganizationId", IsForeignKey=true, DeleteRule="SET NULL")]
		internal Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.Invoices.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.Invoices.Add(this);
						this._OrganizationId = value.OrganizationId;
					}
					else
					{
						this._OrganizationId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Invoice", Storage="_User", ThisKey="CreatedByUserId", OtherKey="UserId", IsForeignKey=true)]
		internal User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Invoices.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Invoices.Add(this);
						this._CreatedByUserId = value.UserId;
					}
					else
					{
						this._CreatedByUserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceItems(InvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = this;
		}
		
		private void detach_InvoiceItems(InvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceItem")]
	public partial class InvoiceItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _InvoiceItemId;
		
		private System.Guid _InvoiceId;
		
		private string _ProductName;
		
		private int _LineNumber;
		
		private decimal _UnitPrice;
		
		private int _Quantity;
		
		private decimal _TotalItemPrice;
		
		private System.DateTime _DateCreated;
		
		private EntityRef<Invoice> _Invoice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceItemIdChanging(System.Guid value);
    partial void OnInvoiceItemIdChanged();
    partial void OnInvoiceIdChanging(System.Guid value);
    partial void OnInvoiceIdChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnLineNumberChanging(int value);
    partial void OnLineNumberChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnTotalItemPriceChanging(decimal value);
    partial void OnTotalItemPriceChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public InvoiceItem()
		{
			this._Invoice = default(EntityRef<Invoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceItemId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid InvoiceItemId
		{
			get
			{
				return this._InvoiceItemId;
			}
			set
			{
				if ((this._InvoiceItemId != value))
				{
					this.OnInvoiceItemIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceItemId = value;
					this.SendPropertyChanged("InvoiceItemId");
					this.OnInvoiceItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					if (this._Invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceId = value;
					this.SendPropertyChanged("InvoiceId");
					this.OnInvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineNumber", DbType="Int NOT NULL")]
		public int LineNumber
		{
			get
			{
				return this._LineNumber;
			}
			set
			{
				if ((this._LineNumber != value))
				{
					this.OnLineNumberChanging(value);
					this.SendPropertyChanging();
					this._LineNumber = value;
					this.SendPropertyChanged("LineNumber");
					this.OnLineNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalItemPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal TotalItemPrice
		{
			get
			{
				return this._TotalItemPrice;
			}
			set
			{
				if ((this._TotalItemPrice != value))
				{
					this.OnTotalItemPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalItemPrice = value;
					this.SendPropertyChanged("TotalItemPrice");
					this.OnTotalItemPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceItem", Storage="_Invoice", ThisKey="InvoiceId", OtherKey="InvoiceId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		internal Invoice Invoice
		{
			get
			{
				return this._Invoice.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice.Entity;
				if (((previousValue != value) 
							|| (this._Invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice.Entity = null;
						previousValue.InvoiceItems.Remove(this);
					}
					this._Invoice.Entity = value;
					if ((value != null))
					{
						value.InvoiceItems.Add(this);
						this._InvoiceId = value.InvoiceId;
					}
					else
					{
						this._InvoiceId = default(System.Guid);
					}
					this.SendPropertyChanged("Invoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Order]")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _OrderId;
		
		private long _OrderNumber;
		
		private System.Nullable<System.Guid> _CreatedByUserId;
		
		private string _CreatedByUserName;
		
		private System.Nullable<System.Guid> _OrganizationId;
		
		private System.DateTime _DateCreated;
		
		private EntityRef<Organization> _Organization;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIdChanging(System.Guid value);
    partial void OnOrderIdChanged();
    partial void OnOrderNumberChanging(long value);
    partial void OnOrderNumberChanged();
    partial void OnCreatedByUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedByUserNameChanging(string value);
    partial void OnCreatedByUserNameChanged();
    partial void OnOrganizationIdChanging(System.Nullable<System.Guid> value);
    partial void OnOrganizationIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public Order()
		{
			this._Organization = default(EntityRef<Organization>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNumber", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long OrderNumber
		{
			get
			{
				return this._OrderNumber;
			}
			set
			{
				if ((this._OrderNumber != value))
				{
					this.OnOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._OrderNumber = value;
					this.SendPropertyChanged("OrderNumber");
					this.OnOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserName", DbType="VarChar(250)")]
		public string CreatedByUserName
		{
			get
			{
				return this._CreatedByUserName;
			}
			set
			{
				if ((this._CreatedByUserName != value))
				{
					this.OnCreatedByUserNameChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserName = value;
					this.SendPropertyChanged("CreatedByUserName");
					this.OnCreatedByUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OrganizationId
		{
			get
			{
				return this._OrganizationId;
			}
			set
			{
				if ((this._OrganizationId != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationId = value;
					this.SendPropertyChanged("OrganizationId");
					this.OnOrganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_Order", Storage="_Organization", ThisKey="OrganizationId", OtherKey="OrganizationId", IsForeignKey=true, DeleteRule="SET NULL")]
		internal Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._OrganizationId = value.OrganizationId;
					}
					else
					{
						this._OrganizationId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Order", Storage="_User", ThisKey="CreatedByUserId", OtherKey="UserId", IsForeignKey=true)]
		internal User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._CreatedByUserId = value.UserId;
					}
					else
					{
						this._CreatedByUserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderItem")]
	public partial class OrderItem
	{
		
		private System.Guid _OrderItemId;
		
		private System.Guid _OrderId;
		
		private string _ProductName;
		
		private int _LineNumber;
		
		private decimal _UnitPrice;
		
		private int _Quantity;
		
		private decimal _TotalItemPrice;
		
		private System.DateTime _DateCreated;
		
		public OrderItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderItemId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OrderItemId
		{
			get
			{
				return this._OrderItemId;
			}
			set
			{
				if ((this._OrderItemId != value))
				{
					this._OrderItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this._OrderId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineNumber", DbType="Int NOT NULL")]
		public int LineNumber
		{
			get
			{
				return this._LineNumber;
			}
			set
			{
				if ((this._LineNumber != value))
				{
					this._LineNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this._UnitPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalItemPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal TotalItemPrice
		{
			get
			{
				return this._TotalItemPrice;
			}
			set
			{
				if ((this._TotalItemPrice != value))
				{
					this._TotalItemPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this._DateCreated = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrganizationSubscriptionType")]
	public partial class OrganizationSubscriptionType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _OrganizationSubscriptionTypeId;
		
		private string _Name;
		
		private decimal _MonthlySubscriptionPrice;
		
		private decimal _SmsUnitPrice;
		
		private System.DateTime _DateCreated;
		
		private EntitySet<Organization> _Organizations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrganizationSubscriptionTypeIdChanging(System.Guid value);
    partial void OnOrganizationSubscriptionTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMonthlySubscriptionPriceChanging(decimal value);
    partial void OnMonthlySubscriptionPriceChanged();
    partial void OnSmsUnitPriceChanging(decimal value);
    partial void OnSmsUnitPriceChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public OrganizationSubscriptionType()
		{
			this._Organizations = new EntitySet<Organization>(new Action<Organization>(this.attach_Organizations), new Action<Organization>(this.detach_Organizations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationSubscriptionTypeId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid OrganizationSubscriptionTypeId
		{
			get
			{
				return this._OrganizationSubscriptionTypeId;
			}
			set
			{
				if ((this._OrganizationSubscriptionTypeId != value))
				{
					this.OnOrganizationSubscriptionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationSubscriptionTypeId = value;
					this.SendPropertyChanged("OrganizationSubscriptionTypeId");
					this.OnOrganizationSubscriptionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthlySubscriptionPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal MonthlySubscriptionPrice
		{
			get
			{
				return this._MonthlySubscriptionPrice;
			}
			set
			{
				if ((this._MonthlySubscriptionPrice != value))
				{
					this.OnMonthlySubscriptionPriceChanging(value);
					this.SendPropertyChanging();
					this._MonthlySubscriptionPrice = value;
					this.SendPropertyChanged("MonthlySubscriptionPrice");
					this.OnMonthlySubscriptionPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsUnitPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal SmsUnitPrice
		{
			get
			{
				return this._SmsUnitPrice;
			}
			set
			{
				if ((this._SmsUnitPrice != value))
				{
					this.OnSmsUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._SmsUnitPrice = value;
					this.SendPropertyChanged("SmsUnitPrice");
					this.OnSmsUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizationSubscriptionType_Organization", Storage="_Organizations", ThisKey="OrganizationSubscriptionTypeId", OtherKey="OrganizationSubscriptionTypeId")]
		public EntitySet<Organization> Organizations
		{
			get
			{
				return this._Organizations;
			}
			set
			{
				this._Organizations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Organizations(Organization entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationSubscriptionType = this;
		}
		
		private void detach_Organizations(Organization entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationSubscriptionType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServerAction")]
	public partial class ServerAction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ServerActionId;
		
		private string _Function;
		
		private System.Nullable<System.Guid> _UserId;
		
		private string _UserName;
		
		private string _EntityChanged;
		
		private string _FieldChanged;
		
		private string _OriginalValue;
		
		private string _NewValue;
		
		private string _Comments;
		
		private System.DateTime _DateCreated;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServerActionIdChanging(int value);
    partial void OnServerActionIdChanged();
    partial void OnFunctionChanging(string value);
    partial void OnFunctionChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnEntityChangedChanging(string value);
    partial void OnEntityChangedChanged();
    partial void OnFieldChangedChanging(string value);
    partial void OnFieldChangedChanged();
    partial void OnOriginalValueChanging(string value);
    partial void OnOriginalValueChanged();
    partial void OnNewValueChanging(string value);
    partial void OnNewValueChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public ServerAction()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerActionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ServerActionId
		{
			get
			{
				return this._ServerActionId;
			}
			set
			{
				if ((this._ServerActionId != value))
				{
					this.OnServerActionIdChanging(value);
					this.SendPropertyChanging();
					this._ServerActionId = value;
					this.SendPropertyChanged("ServerActionId");
					this.OnServerActionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Function]", Storage="_Function", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Function
		{
			get
			{
				return this._Function;
			}
			set
			{
				if ((this._Function != value))
				{
					this.OnFunctionChanging(value);
					this.SendPropertyChanging();
					this._Function = value;
					this.SendPropertyChanged("Function");
					this.OnFunctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityChanged", DbType="VarChar(50)")]
		public string EntityChanged
		{
			get
			{
				return this._EntityChanged;
			}
			set
			{
				if ((this._EntityChanged != value))
				{
					this.OnEntityChangedChanging(value);
					this.SendPropertyChanging();
					this._EntityChanged = value;
					this.SendPropertyChanged("EntityChanged");
					this.OnEntityChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldChanged", DbType="VarChar(50)")]
		public string FieldChanged
		{
			get
			{
				return this._FieldChanged;
			}
			set
			{
				if ((this._FieldChanged != value))
				{
					this.OnFieldChangedChanging(value);
					this.SendPropertyChanging();
					this._FieldChanged = value;
					this.SendPropertyChanged("FieldChanged");
					this.OnFieldChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalValue", DbType="VarChar(250)")]
		public string OriginalValue
		{
			get
			{
				return this._OriginalValue;
			}
			set
			{
				if ((this._OriginalValue != value))
				{
					this.OnOriginalValueChanging(value);
					this.SendPropertyChanging();
					this._OriginalValue = value;
					this.SendPropertyChanged("OriginalValue");
					this.OnOriginalValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewValue", DbType="VarChar(250)")]
		public string NewValue
		{
			get
			{
				return this._NewValue;
			}
			set
			{
				if ((this._NewValue != value))
				{
					this.OnNewValueChanging(value);
					this.SendPropertyChanging();
					this._NewValue = value;
					this.SendPropertyChanged("NewValue");
					this.OnNewValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="VarChar(250)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ServerAction", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteRule="SET NULL")]
		internal User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ServerActions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ServerActions.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServerError")]
	public partial class ServerError : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ServerErrorId;
		
		private string _ErrorMessage;
		
		private System.Nullable<System.Guid> _UserId;
		
		private string _UserName;
		
		private string _Comments;
		
		private System.DateTime _DateCreated;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServerErrorIdChanging(int value);
    partial void OnServerErrorIdChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public ServerError()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerErrorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ServerErrorId
		{
			get
			{
				return this._ServerErrorId;
			}
			set
			{
				if ((this._ServerErrorId != value))
				{
					this.OnServerErrorIdChanging(value);
					this.SendPropertyChanging();
					this._ServerErrorId = value;
					this.SendPropertyChanged("ServerErrorId");
					this.OnServerErrorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="VarChar(250)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ServerError", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteRule="SET NULL")]
		internal User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ServerErrors.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ServerErrors.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SmsCampaign")]
	public partial class SmsCampaign : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SmsCampaignId;
		
		private string _Name;
		
		private string _MessageContents;
		
		private string _OrganizationSelectedCode;
		
		private System.Guid _OrganizationId;
		
		private System.DateTime _DateCreated;
		
		private EntitySet<SmsSentLog> _SmsSentLogs;
		
		private EntitySet<SmsSentQueueItem> _SmsSentQueueItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSmsCampaignIdChanging(System.Guid value);
    partial void OnSmsCampaignIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMessageContentsChanging(string value);
    partial void OnMessageContentsChanged();
    partial void OnOrganizationSelectedCodeChanging(string value);
    partial void OnOrganizationSelectedCodeChanged();
    partial void OnOrganizationIdChanging(System.Guid value);
    partial void OnOrganizationIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public SmsCampaign()
		{
			this._SmsSentLogs = new EntitySet<SmsSentLog>(new Action<SmsSentLog>(this.attach_SmsSentLogs), new Action<SmsSentLog>(this.detach_SmsSentLogs));
			this._SmsSentQueueItems = new EntitySet<SmsSentQueueItem>(new Action<SmsSentQueueItem>(this.attach_SmsSentQueueItems), new Action<SmsSentQueueItem>(this.detach_SmsSentQueueItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsCampaignId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SmsCampaignId
		{
			get
			{
				return this._SmsCampaignId;
			}
			set
			{
				if ((this._SmsCampaignId != value))
				{
					this.OnSmsCampaignIdChanging(value);
					this.SendPropertyChanging();
					this._SmsCampaignId = value;
					this.SendPropertyChanged("SmsCampaignId");
					this.OnSmsCampaignIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageContents", DbType="VarChar(160) NOT NULL", CanBeNull=false)]
		public string MessageContents
		{
			get
			{
				return this._MessageContents;
			}
			set
			{
				if ((this._MessageContents != value))
				{
					this.OnMessageContentsChanging(value);
					this.SendPropertyChanging();
					this._MessageContents = value;
					this.SendPropertyChanged("MessageContents");
					this.OnMessageContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationSelectedCode", DbType="VarChar(50)")]
		public string OrganizationSelectedCode
		{
			get
			{
				return this._OrganizationSelectedCode;
			}
			set
			{
				if ((this._OrganizationSelectedCode != value))
				{
					this.OnOrganizationSelectedCodeChanging(value);
					this.SendPropertyChanging();
					this._OrganizationSelectedCode = value;
					this.SendPropertyChanged("OrganizationSelectedCode");
					this.OnOrganizationSelectedCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OrganizationId
		{
			get
			{
				return this._OrganizationId;
			}
			set
			{
				if ((this._OrganizationId != value))
				{
					this.OnOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationId = value;
					this.SendPropertyChanged("OrganizationId");
					this.OnOrganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SmsCampaign_SmsSentLog", Storage="_SmsSentLogs", ThisKey="SmsCampaignId", OtherKey="SmsCampaignId")]
		public EntitySet<SmsSentLog> SmsSentLogs
		{
			get
			{
				return this._SmsSentLogs;
			}
			set
			{
				this._SmsSentLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SmsCampaign_SmsSentQueueItem", Storage="_SmsSentQueueItems", ThisKey="SmsCampaignId", OtherKey="SmsCampaignId")]
		public EntitySet<SmsSentQueueItem> SmsSentQueueItems
		{
			get
			{
				return this._SmsSentQueueItems;
			}
			set
			{
				this._SmsSentQueueItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SmsSentLogs(SmsSentLog entity)
		{
			this.SendPropertyChanging();
			entity.SmsCampaign = this;
		}
		
		private void detach_SmsSentLogs(SmsSentLog entity)
		{
			this.SendPropertyChanging();
			entity.SmsCampaign = null;
		}
		
		private void attach_SmsSentQueueItems(SmsSentQueueItem entity)
		{
			this.SendPropertyChanging();
			entity.SmsCampaign = this;
		}
		
		private void detach_SmsSentQueueItems(SmsSentQueueItem entity)
		{
			this.SendPropertyChanging();
			entity.SmsCampaign = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SmsDeliveryReportLog")]
	public partial class SmsDeliveryReportLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SmsDeliveryReportLogId;
		
		private string _CellPhoneNumber;
		
		private string _MessageId;
		
		private string _MessageContents;
		
		private string _DateReceivedOriginalFormat;
		
		private string _Campaign;
		
		private string _DataField;
		
		private string _Nonce;
		
		private string _NonceDateOriginalFormat;
		
		private string _Checksum;
		
		private int _SmsProviderCode;
		
		private System.Nullable<System.Guid> _SmsSentLogId;
		
		private System.DateTime _DateCreated;
		
		private EntityRef<SmsSentLog> _SmsSentLog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSmsDeliveryReportLogIdChanging(System.Guid value);
    partial void OnSmsDeliveryReportLogIdChanged();
    partial void OnCellPhoneNumberChanging(string value);
    partial void OnCellPhoneNumberChanged();
    partial void OnMessageIdChanging(string value);
    partial void OnMessageIdChanged();
    partial void OnMessageContentsChanging(string value);
    partial void OnMessageContentsChanged();
    partial void OnDateReceivedOriginalFormatChanging(string value);
    partial void OnDateReceivedOriginalFormatChanged();
    partial void OnCampaignChanging(string value);
    partial void OnCampaignChanged();
    partial void OnDataFieldChanging(string value);
    partial void OnDataFieldChanged();
    partial void OnNonceChanging(string value);
    partial void OnNonceChanged();
    partial void OnNonceDateOriginalFormatChanging(string value);
    partial void OnNonceDateOriginalFormatChanged();
    partial void OnChecksumChanging(string value);
    partial void OnChecksumChanged();
    partial void OnSmsProviderCodeChanging(int value);
    partial void OnSmsProviderCodeChanged();
    partial void OnSmsSentLogIdChanging(System.Nullable<System.Guid> value);
    partial void OnSmsSentLogIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public SmsDeliveryReportLog()
		{
			this._SmsSentLog = default(EntityRef<SmsSentLog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsDeliveryReportLogId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SmsDeliveryReportLogId
		{
			get
			{
				return this._SmsDeliveryReportLogId;
			}
			set
			{
				if ((this._SmsDeliveryReportLogId != value))
				{
					this.OnSmsDeliveryReportLogIdChanging(value);
					this.SendPropertyChanging();
					this._SmsDeliveryReportLogId = value;
					this.SendPropertyChanged("SmsDeliveryReportLogId");
					this.OnSmsDeliveryReportLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhoneNumber", DbType="VarChar(15)")]
		public string CellPhoneNumber
		{
			get
			{
				return this._CellPhoneNumber;
			}
			set
			{
				if ((this._CellPhoneNumber != value))
				{
					this.OnCellPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._CellPhoneNumber = value;
					this.SendPropertyChanged("CellPhoneNumber");
					this.OnCellPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageId", DbType="VarChar(100)")]
		public string MessageId
		{
			get
			{
				return this._MessageId;
			}
			set
			{
				if ((this._MessageId != value))
				{
					this.OnMessageIdChanging(value);
					this.SendPropertyChanging();
					this._MessageId = value;
					this.SendPropertyChanged("MessageId");
					this.OnMessageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageContents", DbType="VarChar(MAX)")]
		public string MessageContents
		{
			get
			{
				return this._MessageContents;
			}
			set
			{
				if ((this._MessageContents != value))
				{
					this.OnMessageContentsChanging(value);
					this.SendPropertyChanging();
					this._MessageContents = value;
					this.SendPropertyChanged("MessageContents");
					this.OnMessageContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateReceivedOriginalFormat", DbType="VarChar(50)")]
		public string DateReceivedOriginalFormat
		{
			get
			{
				return this._DateReceivedOriginalFormat;
			}
			set
			{
				if ((this._DateReceivedOriginalFormat != value))
				{
					this.OnDateReceivedOriginalFormatChanging(value);
					this.SendPropertyChanging();
					this._DateReceivedOriginalFormat = value;
					this.SendPropertyChanged("DateReceivedOriginalFormat");
					this.OnDateReceivedOriginalFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Campaign", DbType="VarChar(50)")]
		public string Campaign
		{
			get
			{
				return this._Campaign;
			}
			set
			{
				if ((this._Campaign != value))
				{
					this.OnCampaignChanging(value);
					this.SendPropertyChanging();
					this._Campaign = value;
					this.SendPropertyChanged("Campaign");
					this.OnCampaignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataField", DbType="VarChar(50)")]
		public string DataField
		{
			get
			{
				return this._DataField;
			}
			set
			{
				if ((this._DataField != value))
				{
					this.OnDataFieldChanging(value);
					this.SendPropertyChanging();
					this._DataField = value;
					this.SendPropertyChanged("DataField");
					this.OnDataFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nonce", DbType="VarChar(50)")]
		public string Nonce
		{
			get
			{
				return this._Nonce;
			}
			set
			{
				if ((this._Nonce != value))
				{
					this.OnNonceChanging(value);
					this.SendPropertyChanging();
					this._Nonce = value;
					this.SendPropertyChanged("Nonce");
					this.OnNonceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NonceDateOriginalFormat", DbType="VarChar(50)")]
		public string NonceDateOriginalFormat
		{
			get
			{
				return this._NonceDateOriginalFormat;
			}
			set
			{
				if ((this._NonceDateOriginalFormat != value))
				{
					this.OnNonceDateOriginalFormatChanging(value);
					this.SendPropertyChanging();
					this._NonceDateOriginalFormat = value;
					this.SendPropertyChanged("NonceDateOriginalFormat");
					this.OnNonceDateOriginalFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Checksum", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Checksum
		{
			get
			{
				return this._Checksum;
			}
			set
			{
				if ((this._Checksum != value))
				{
					this.OnChecksumChanging(value);
					this.SendPropertyChanging();
					this._Checksum = value;
					this.SendPropertyChanged("Checksum");
					this.OnChecksumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsProviderCode", DbType="Int NOT NULL")]
		public int SmsProviderCode
		{
			get
			{
				return this._SmsProviderCode;
			}
			set
			{
				if ((this._SmsProviderCode != value))
				{
					this.OnSmsProviderCodeChanging(value);
					this.SendPropertyChanging();
					this._SmsProviderCode = value;
					this.SendPropertyChanged("SmsProviderCode");
					this.OnSmsProviderCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsSentLogId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SmsSentLogId
		{
			get
			{
				return this._SmsSentLogId;
			}
			set
			{
				if ((this._SmsSentLogId != value))
				{
					if (this._SmsSentLog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSmsSentLogIdChanging(value);
					this.SendPropertyChanging();
					this._SmsSentLogId = value;
					this.SendPropertyChanged("SmsSentLogId");
					this.OnSmsSentLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SmsSentLog_SmsDeliveryReportLog", Storage="_SmsSentLog", ThisKey="SmsSentLogId", OtherKey="SmsSentLogId", IsForeignKey=true, DeleteRule="SET NULL")]
		internal SmsSentLog SmsSentLog
		{
			get
			{
				return this._SmsSentLog.Entity;
			}
			set
			{
				SmsSentLog previousValue = this._SmsSentLog.Entity;
				if (((previousValue != value) 
							|| (this._SmsSentLog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SmsSentLog.Entity = null;
						previousValue.SmsDeliveryReportLogs.Remove(this);
					}
					this._SmsSentLog.Entity = value;
					if ((value != null))
					{
						value.SmsDeliveryReportLogs.Add(this);
						this._SmsSentLogId = value.SmsSentLogId;
					}
					else
					{
						this._SmsSentLogId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("SmsSentLog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SmsMessageTemplate")]
	public partial class SmsMessageTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SmsMessageTemplateId;
		
		private System.Guid _OrganizationId;
		
		private string _Message;
		
		private System.DateTime _DateCreated;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSmsMessageTemplateIdChanging(System.Guid value);
    partial void OnSmsMessageTemplateIdChanged();
    partial void OnOrganizationIdChanging(System.Guid value);
    partial void OnOrganizationIdChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public SmsMessageTemplate()
		{
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsMessageTemplateId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SmsMessageTemplateId
		{
			get
			{
				return this._SmsMessageTemplateId;
			}
			set
			{
				if ((this._SmsMessageTemplateId != value))
				{
					this.OnSmsMessageTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._SmsMessageTemplateId = value;
					this.SendPropertyChanged("SmsMessageTemplateId");
					this.OnSmsMessageTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OrganizationId
		{
			get
			{
				return this._OrganizationId;
			}
			set
			{
				if ((this._OrganizationId != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationId = value;
					this.SendPropertyChanged("OrganizationId");
					this.OnOrganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(140) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_SmsMessageTemplate", Storage="_Organization", ThisKey="OrganizationId", OtherKey="OrganizationId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		internal Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.SmsMessageTemplates.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.SmsMessageTemplates.Add(this);
						this._OrganizationId = value.OrganizationId;
					}
					else
					{
						this._OrganizationId = default(System.Guid);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SmsProcessor")]
	public partial class SmsProcessor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SmsProcessorId;
		
		private string _Name;
		
		private int _ExecutionInterval;
		
		private System.Nullable<System.DateTime> _LastExecutionDate;
		
		private System.DateTime _DateCreated;
		
		private EntitySet<SmsProcessorLog> _SmsProcessorLogs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSmsProcessorIdChanging(System.Guid value);
    partial void OnSmsProcessorIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnExecutionIntervalChanging(int value);
    partial void OnExecutionIntervalChanged();
    partial void OnLastExecutionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastExecutionDateChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public SmsProcessor()
		{
			this._SmsProcessorLogs = new EntitySet<SmsProcessorLog>(new Action<SmsProcessorLog>(this.attach_SmsProcessorLogs), new Action<SmsProcessorLog>(this.detach_SmsProcessorLogs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsProcessorId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SmsProcessorId
		{
			get
			{
				return this._SmsProcessorId;
			}
			set
			{
				if ((this._SmsProcessorId != value))
				{
					this.OnSmsProcessorIdChanging(value);
					this.SendPropertyChanging();
					this._SmsProcessorId = value;
					this.SendPropertyChanged("SmsProcessorId");
					this.OnSmsProcessorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionInterval", DbType="Int NOT NULL")]
		public int ExecutionInterval
		{
			get
			{
				return this._ExecutionInterval;
			}
			set
			{
				if ((this._ExecutionInterval != value))
				{
					this.OnExecutionIntervalChanging(value);
					this.SendPropertyChanging();
					this._ExecutionInterval = value;
					this.SendPropertyChanged("ExecutionInterval");
					this.OnExecutionIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastExecutionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastExecutionDate
		{
			get
			{
				return this._LastExecutionDate;
			}
			set
			{
				if ((this._LastExecutionDate != value))
				{
					this.OnLastExecutionDateChanging(value);
					this.SendPropertyChanging();
					this._LastExecutionDate = value;
					this.SendPropertyChanged("LastExecutionDate");
					this.OnLastExecutionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SmsProcessor_SmsProcessorLog", Storage="_SmsProcessorLogs", ThisKey="SmsProcessorId", OtherKey="SmsProcessorId")]
		public EntitySet<SmsProcessorLog> SmsProcessorLogs
		{
			get
			{
				return this._SmsProcessorLogs;
			}
			set
			{
				this._SmsProcessorLogs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SmsProcessorLogs(SmsProcessorLog entity)
		{
			this.SendPropertyChanging();
			entity.SmsProcessor = this;
		}
		
		private void detach_SmsProcessorLogs(SmsProcessorLog entity)
		{
			this.SendPropertyChanging();
			entity.SmsProcessor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SmsProcessorLog")]
	public partial class SmsProcessorLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SmsProcessorLogId;
		
		private System.Guid _SmsProcessorId;
		
		private string _LogMessageType;
		
		private string _Message;
		
		private System.DateTime _DateCreated;
		
		private EntityRef<SmsProcessor> _SmsProcessor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSmsProcessorLogIdChanging(System.Guid value);
    partial void OnSmsProcessorLogIdChanged();
    partial void OnSmsProcessorIdChanging(System.Guid value);
    partial void OnSmsProcessorIdChanged();
    partial void OnLogMessageTypeChanging(string value);
    partial void OnLogMessageTypeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public SmsProcessorLog()
		{
			this._SmsProcessor = default(EntityRef<SmsProcessor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsProcessorLogId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SmsProcessorLogId
		{
			get
			{
				return this._SmsProcessorLogId;
			}
			set
			{
				if ((this._SmsProcessorLogId != value))
				{
					this.OnSmsProcessorLogIdChanging(value);
					this.SendPropertyChanging();
					this._SmsProcessorLogId = value;
					this.SendPropertyChanged("SmsProcessorLogId");
					this.OnSmsProcessorLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsProcessorId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SmsProcessorId
		{
			get
			{
				return this._SmsProcessorId;
			}
			set
			{
				if ((this._SmsProcessorId != value))
				{
					if (this._SmsProcessor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSmsProcessorIdChanging(value);
					this.SendPropertyChanging();
					this._SmsProcessorId = value;
					this.SendPropertyChanged("SmsProcessorId");
					this.OnSmsProcessorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogMessageType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LogMessageType
		{
			get
			{
				return this._LogMessageType;
			}
			set
			{
				if ((this._LogMessageType != value))
				{
					this.OnLogMessageTypeChanging(value);
					this.SendPropertyChanging();
					this._LogMessageType = value;
					this.SendPropertyChanged("LogMessageType");
					this.OnLogMessageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SmsProcessor_SmsProcessorLog", Storage="_SmsProcessor", ThisKey="SmsProcessorId", OtherKey="SmsProcessorId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		internal SmsProcessor SmsProcessor
		{
			get
			{
				return this._SmsProcessor.Entity;
			}
			set
			{
				SmsProcessor previousValue = this._SmsProcessor.Entity;
				if (((previousValue != value) 
							|| (this._SmsProcessor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SmsProcessor.Entity = null;
						previousValue.SmsProcessorLogs.Remove(this);
					}
					this._SmsProcessor.Entity = value;
					if ((value != null))
					{
						value.SmsProcessorLogs.Add(this);
						this._SmsProcessorId = value.SmsProcessorId;
					}
					else
					{
						this._SmsProcessorId = default(System.Guid);
					}
					this.SendPropertyChanged("SmsProcessor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SmsReceivedLog")]
	public partial class SmsReceivedLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SmsReceivedLogId;
		
		private string _CellPhoneNumber;
		
		private string _MessageId;
		
		private string _MessageContents;
		
		private string _DateReceivedOriginalFormat;
		
		private string _Campaign;
		
		private string _DataField;
		
		private string _Nonce;
		
		private string _NonceDateOriginalFormat;
		
		private string _Checksum;
		
		private int _SmsProviderCode;
		
		private System.Nullable<System.Guid> _OrganizationId;
		
		private System.Nullable<System.Guid> _SubscriberId;
		
		private string _SubscriberName;
		
		private string _MessageToOrganization;
		
		private System.Nullable<System.DateTime> _DateReceived;
		
		private System.DateTime _DateCreated;
		
		private EntityRef<Subscriber> _Subscriber;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSmsReceivedLogIdChanging(System.Guid value);
    partial void OnSmsReceivedLogIdChanged();
    partial void OnCellPhoneNumberChanging(string value);
    partial void OnCellPhoneNumberChanged();
    partial void OnMessageIdChanging(string value);
    partial void OnMessageIdChanged();
    partial void OnMessageContentsChanging(string value);
    partial void OnMessageContentsChanged();
    partial void OnDateReceivedOriginalFormatChanging(string value);
    partial void OnDateReceivedOriginalFormatChanged();
    partial void OnCampaignChanging(string value);
    partial void OnCampaignChanged();
    partial void OnDataFieldChanging(string value);
    partial void OnDataFieldChanged();
    partial void OnNonceChanging(string value);
    partial void OnNonceChanged();
    partial void OnNonceDateOriginalFormatChanging(string value);
    partial void OnNonceDateOriginalFormatChanged();
    partial void OnChecksumChanging(string value);
    partial void OnChecksumChanged();
    partial void OnSmsProviderCodeChanging(int value);
    partial void OnSmsProviderCodeChanged();
    partial void OnOrganizationIdChanging(System.Nullable<System.Guid> value);
    partial void OnOrganizationIdChanged();
    partial void OnSubscriberIdChanging(System.Nullable<System.Guid> value);
    partial void OnSubscriberIdChanged();
    partial void OnSubscriberNameChanging(string value);
    partial void OnSubscriberNameChanged();
    partial void OnMessageToOrganizationChanging(string value);
    partial void OnMessageToOrganizationChanged();
    partial void OnDateReceivedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateReceivedChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public SmsReceivedLog()
		{
			this._Subscriber = default(EntityRef<Subscriber>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsReceivedLogId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SmsReceivedLogId
		{
			get
			{
				return this._SmsReceivedLogId;
			}
			set
			{
				if ((this._SmsReceivedLogId != value))
				{
					this.OnSmsReceivedLogIdChanging(value);
					this.SendPropertyChanging();
					this._SmsReceivedLogId = value;
					this.SendPropertyChanged("SmsReceivedLogId");
					this.OnSmsReceivedLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhoneNumber", DbType="VarChar(15)")]
		public string CellPhoneNumber
		{
			get
			{
				return this._CellPhoneNumber;
			}
			set
			{
				if ((this._CellPhoneNumber != value))
				{
					this.OnCellPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._CellPhoneNumber = value;
					this.SendPropertyChanged("CellPhoneNumber");
					this.OnCellPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageId", DbType="VarChar(100)")]
		public string MessageId
		{
			get
			{
				return this._MessageId;
			}
			set
			{
				if ((this._MessageId != value))
				{
					this.OnMessageIdChanging(value);
					this.SendPropertyChanging();
					this._MessageId = value;
					this.SendPropertyChanged("MessageId");
					this.OnMessageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageContents", DbType="VarChar(MAX)")]
		public string MessageContents
		{
			get
			{
				return this._MessageContents;
			}
			set
			{
				if ((this._MessageContents != value))
				{
					this.OnMessageContentsChanging(value);
					this.SendPropertyChanging();
					this._MessageContents = value;
					this.SendPropertyChanged("MessageContents");
					this.OnMessageContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateReceivedOriginalFormat", DbType="VarChar(50)")]
		public string DateReceivedOriginalFormat
		{
			get
			{
				return this._DateReceivedOriginalFormat;
			}
			set
			{
				if ((this._DateReceivedOriginalFormat != value))
				{
					this.OnDateReceivedOriginalFormatChanging(value);
					this.SendPropertyChanging();
					this._DateReceivedOriginalFormat = value;
					this.SendPropertyChanged("DateReceivedOriginalFormat");
					this.OnDateReceivedOriginalFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Campaign", DbType="VarChar(50)")]
		public string Campaign
		{
			get
			{
				return this._Campaign;
			}
			set
			{
				if ((this._Campaign != value))
				{
					this.OnCampaignChanging(value);
					this.SendPropertyChanging();
					this._Campaign = value;
					this.SendPropertyChanged("Campaign");
					this.OnCampaignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataField", DbType="VarChar(50)")]
		public string DataField
		{
			get
			{
				return this._DataField;
			}
			set
			{
				if ((this._DataField != value))
				{
					this.OnDataFieldChanging(value);
					this.SendPropertyChanging();
					this._DataField = value;
					this.SendPropertyChanged("DataField");
					this.OnDataFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nonce", DbType="VarChar(50)")]
		public string Nonce
		{
			get
			{
				return this._Nonce;
			}
			set
			{
				if ((this._Nonce != value))
				{
					this.OnNonceChanging(value);
					this.SendPropertyChanging();
					this._Nonce = value;
					this.SendPropertyChanged("Nonce");
					this.OnNonceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NonceDateOriginalFormat", DbType="VarChar(50)")]
		public string NonceDateOriginalFormat
		{
			get
			{
				return this._NonceDateOriginalFormat;
			}
			set
			{
				if ((this._NonceDateOriginalFormat != value))
				{
					this.OnNonceDateOriginalFormatChanging(value);
					this.SendPropertyChanging();
					this._NonceDateOriginalFormat = value;
					this.SendPropertyChanged("NonceDateOriginalFormat");
					this.OnNonceDateOriginalFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Checksum", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Checksum
		{
			get
			{
				return this._Checksum;
			}
			set
			{
				if ((this._Checksum != value))
				{
					this.OnChecksumChanging(value);
					this.SendPropertyChanging();
					this._Checksum = value;
					this.SendPropertyChanged("Checksum");
					this.OnChecksumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsProviderCode", DbType="Int NOT NULL")]
		public int SmsProviderCode
		{
			get
			{
				return this._SmsProviderCode;
			}
			set
			{
				if ((this._SmsProviderCode != value))
				{
					this.OnSmsProviderCodeChanging(value);
					this.SendPropertyChanging();
					this._SmsProviderCode = value;
					this.SendPropertyChanged("SmsProviderCode");
					this.OnSmsProviderCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OrganizationId
		{
			get
			{
				return this._OrganizationId;
			}
			set
			{
				if ((this._OrganizationId != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationId = value;
					this.SendPropertyChanged("OrganizationId");
					this.OnOrganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriberId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SubscriberId
		{
			get
			{
				return this._SubscriberId;
			}
			set
			{
				if ((this._SubscriberId != value))
				{
					if (this._Subscriber.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubscriberIdChanging(value);
					this.SendPropertyChanging();
					this._SubscriberId = value;
					this.SendPropertyChanged("SubscriberId");
					this.OnSubscriberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriberName", DbType="VarChar(160)")]
		public string SubscriberName
		{
			get
			{
				return this._SubscriberName;
			}
			set
			{
				if ((this._SubscriberName != value))
				{
					this.OnSubscriberNameChanging(value);
					this.SendPropertyChanging();
					this._SubscriberName = value;
					this.SendPropertyChanged("SubscriberName");
					this.OnSubscriberNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageToOrganization", DbType="VarChar(MAX)")]
		public string MessageToOrganization
		{
			get
			{
				return this._MessageToOrganization;
			}
			set
			{
				if ((this._MessageToOrganization != value))
				{
					this.OnMessageToOrganizationChanging(value);
					this.SendPropertyChanging();
					this._MessageToOrganization = value;
					this.SendPropertyChanged("MessageToOrganization");
					this.OnMessageToOrganizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateReceived", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateReceived
		{
			get
			{
				return this._DateReceived;
			}
			set
			{
				if ((this._DateReceived != value))
				{
					this.OnDateReceivedChanging(value);
					this.SendPropertyChanging();
					this._DateReceived = value;
					this.SendPropertyChanged("DateReceived");
					this.OnDateReceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subscriber_SmsReceivedLog", Storage="_Subscriber", ThisKey="SubscriberId", OtherKey="SubscriberId", IsForeignKey=true, DeleteRule="SET NULL")]
		internal Subscriber Subscriber
		{
			get
			{
				return this._Subscriber.Entity;
			}
			set
			{
				Subscriber previousValue = this._Subscriber.Entity;
				if (((previousValue != value) 
							|| (this._Subscriber.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subscriber.Entity = null;
						previousValue.SmsReceivedLogs.Remove(this);
					}
					this._Subscriber.Entity = value;
					if ((value != null))
					{
						value.SmsReceivedLogs.Add(this);
						this._SubscriberId = value.SubscriberId;
					}
					else
					{
						this._SubscriberId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Subscriber");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_SmsReceivedLog", Storage="_Organization", ThisKey="OrganizationId", OtherKey="OrganizationId", IsForeignKey=true, DeleteRule="SET NULL")]
		internal Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.SmsReceivedLogs.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.SmsReceivedLogs.Add(this);
						this._OrganizationId = value.OrganizationId;
					}
					else
					{
						this._OrganizationId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SmsReceivedQueueItem")]
	public partial class SmsReceivedQueueItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SmsReceivedQueueItemId;
		
		private string _CellPhoneNumber;
		
		private string _MessageId;
		
		private string _MessageContents;
		
		private string _DateReceivedOriginalFormat;
		
		private string _Campaign;
		
		private string _DataField;
		
		private string _Nonce;
		
		private string _NonceDateOriginalFormat;
		
		private string _Checksum;
		
		private int _SmsProviderCode;
		
		private System.DateTime _DateCreated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSmsReceivedQueueItemIdChanging(System.Guid value);
    partial void OnSmsReceivedQueueItemIdChanged();
    partial void OnCellPhoneNumberChanging(string value);
    partial void OnCellPhoneNumberChanged();
    partial void OnMessageIdChanging(string value);
    partial void OnMessageIdChanged();
    partial void OnMessageContentsChanging(string value);
    partial void OnMessageContentsChanged();
    partial void OnDateReceivedOriginalFormatChanging(string value);
    partial void OnDateReceivedOriginalFormatChanged();
    partial void OnCampaignChanging(string value);
    partial void OnCampaignChanged();
    partial void OnDataFieldChanging(string value);
    partial void OnDataFieldChanged();
    partial void OnNonceChanging(string value);
    partial void OnNonceChanged();
    partial void OnNonceDateOriginalFormatChanging(string value);
    partial void OnNonceDateOriginalFormatChanged();
    partial void OnChecksumChanging(string value);
    partial void OnChecksumChanged();
    partial void OnSmsProviderCodeChanging(int value);
    partial void OnSmsProviderCodeChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public SmsReceivedQueueItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsReceivedQueueItemId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SmsReceivedQueueItemId
		{
			get
			{
				return this._SmsReceivedQueueItemId;
			}
			set
			{
				if ((this._SmsReceivedQueueItemId != value))
				{
					this.OnSmsReceivedQueueItemIdChanging(value);
					this.SendPropertyChanging();
					this._SmsReceivedQueueItemId = value;
					this.SendPropertyChanged("SmsReceivedQueueItemId");
					this.OnSmsReceivedQueueItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhoneNumber", DbType="VarChar(15)")]
		public string CellPhoneNumber
		{
			get
			{
				return this._CellPhoneNumber;
			}
			set
			{
				if ((this._CellPhoneNumber != value))
				{
					this.OnCellPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._CellPhoneNumber = value;
					this.SendPropertyChanged("CellPhoneNumber");
					this.OnCellPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageId", DbType="VarChar(100)")]
		public string MessageId
		{
			get
			{
				return this._MessageId;
			}
			set
			{
				if ((this._MessageId != value))
				{
					this.OnMessageIdChanging(value);
					this.SendPropertyChanging();
					this._MessageId = value;
					this.SendPropertyChanged("MessageId");
					this.OnMessageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageContents", DbType="VarChar(MAX)")]
		public string MessageContents
		{
			get
			{
				return this._MessageContents;
			}
			set
			{
				if ((this._MessageContents != value))
				{
					this.OnMessageContentsChanging(value);
					this.SendPropertyChanging();
					this._MessageContents = value;
					this.SendPropertyChanged("MessageContents");
					this.OnMessageContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateReceivedOriginalFormat", DbType="VarChar(50)")]
		public string DateReceivedOriginalFormat
		{
			get
			{
				return this._DateReceivedOriginalFormat;
			}
			set
			{
				if ((this._DateReceivedOriginalFormat != value))
				{
					this.OnDateReceivedOriginalFormatChanging(value);
					this.SendPropertyChanging();
					this._DateReceivedOriginalFormat = value;
					this.SendPropertyChanged("DateReceivedOriginalFormat");
					this.OnDateReceivedOriginalFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Campaign", DbType="VarChar(50)")]
		public string Campaign
		{
			get
			{
				return this._Campaign;
			}
			set
			{
				if ((this._Campaign != value))
				{
					this.OnCampaignChanging(value);
					this.SendPropertyChanging();
					this._Campaign = value;
					this.SendPropertyChanged("Campaign");
					this.OnCampaignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataField", DbType="VarChar(50)")]
		public string DataField
		{
			get
			{
				return this._DataField;
			}
			set
			{
				if ((this._DataField != value))
				{
					this.OnDataFieldChanging(value);
					this.SendPropertyChanging();
					this._DataField = value;
					this.SendPropertyChanged("DataField");
					this.OnDataFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nonce", DbType="VarChar(50)")]
		public string Nonce
		{
			get
			{
				return this._Nonce;
			}
			set
			{
				if ((this._Nonce != value))
				{
					this.OnNonceChanging(value);
					this.SendPropertyChanging();
					this._Nonce = value;
					this.SendPropertyChanged("Nonce");
					this.OnNonceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NonceDateOriginalFormat", DbType="VarChar(50)")]
		public string NonceDateOriginalFormat
		{
			get
			{
				return this._NonceDateOriginalFormat;
			}
			set
			{
				if ((this._NonceDateOriginalFormat != value))
				{
					this.OnNonceDateOriginalFormatChanging(value);
					this.SendPropertyChanging();
					this._NonceDateOriginalFormat = value;
					this.SendPropertyChanged("NonceDateOriginalFormat");
					this.OnNonceDateOriginalFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Checksum", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Checksum
		{
			get
			{
				return this._Checksum;
			}
			set
			{
				if ((this._Checksum != value))
				{
					this.OnChecksumChanging(value);
					this.SendPropertyChanging();
					this._Checksum = value;
					this.SendPropertyChanged("Checksum");
					this.OnChecksumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsProviderCode", DbType="Int NOT NULL")]
		public int SmsProviderCode
		{
			get
			{
				return this._SmsProviderCode;
			}
			set
			{
				if ((this._SmsProviderCode != value))
				{
					this.OnSmsProviderCodeChanging(value);
					this.SendPropertyChanging();
					this._SmsProviderCode = value;
					this.SendPropertyChanged("SmsProviderCode");
					this.OnSmsProviderCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SmsSentLog")]
	public partial class SmsSentLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SmsSentLogId;
		
		private bool _Success;
		
		private string _ErrorCode;
		
		private string _ErrorMessage;
		
		private string _CellPhoneNumber;
		
		private string _MessageId;
		
		private string _MessageContents;
		
		private string _TableReference;
		
		private System.Nullable<System.Guid> _RecordReference;
		
		private string _Tag;
		
		private int _SmsProviderCode;
		
		private System.Nullable<System.Guid> _SenderUserId;
		
		private bool _Delivered;
		
		private System.Nullable<System.Guid> _OrganizationId;
		
		private System.Nullable<System.Guid> _SubscriberId;
		
		private string _SubscriberName;
		
		private string _Campaign;
		
		private System.Nullable<System.Guid> _SmsCampaignId;
		
		private System.DateTime _DateCreated;
		
		private EntitySet<SmsDeliveryReportLog> _SmsDeliveryReportLogs;
		
		private EntityRef<SmsCampaign> _SmsCampaign;
		
		private EntityRef<Subscriber> _Subscriber;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSmsSentLogIdChanging(System.Guid value);
    partial void OnSmsSentLogIdChanged();
    partial void OnSuccessChanging(bool value);
    partial void OnSuccessChanged();
    partial void OnErrorCodeChanging(string value);
    partial void OnErrorCodeChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    partial void OnCellPhoneNumberChanging(string value);
    partial void OnCellPhoneNumberChanged();
    partial void OnMessageIdChanging(string value);
    partial void OnMessageIdChanged();
    partial void OnMessageContentsChanging(string value);
    partial void OnMessageContentsChanged();
    partial void OnTableReferenceChanging(string value);
    partial void OnTableReferenceChanged();
    partial void OnRecordReferenceChanging(System.Nullable<System.Guid> value);
    partial void OnRecordReferenceChanged();
    partial void OnTagChanging(string value);
    partial void OnTagChanged();
    partial void OnSmsProviderCodeChanging(int value);
    partial void OnSmsProviderCodeChanged();
    partial void OnSenderUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnSenderUserIdChanged();
    partial void OnDeliveredChanging(bool value);
    partial void OnDeliveredChanged();
    partial void OnOrganizationIdChanging(System.Nullable<System.Guid> value);
    partial void OnOrganizationIdChanged();
    partial void OnSubscriberIdChanging(System.Nullable<System.Guid> value);
    partial void OnSubscriberIdChanged();
    partial void OnSubscriberNameChanging(string value);
    partial void OnSubscriberNameChanged();
    partial void OnCampaignChanging(string value);
    partial void OnCampaignChanged();
    partial void OnSmsCampaignIdChanging(System.Nullable<System.Guid> value);
    partial void OnSmsCampaignIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public SmsSentLog()
		{
			this._SmsDeliveryReportLogs = new EntitySet<SmsDeliveryReportLog>(new Action<SmsDeliveryReportLog>(this.attach_SmsDeliveryReportLogs), new Action<SmsDeliveryReportLog>(this.detach_SmsDeliveryReportLogs));
			this._SmsCampaign = default(EntityRef<SmsCampaign>);
			this._Subscriber = default(EntityRef<Subscriber>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsSentLogId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SmsSentLogId
		{
			get
			{
				return this._SmsSentLogId;
			}
			set
			{
				if ((this._SmsSentLogId != value))
				{
					this.OnSmsSentLogIdChanging(value);
					this.SendPropertyChanging();
					this._SmsSentLogId = value;
					this.SendPropertyChanged("SmsSentLogId");
					this.OnSmsSentLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Success", DbType="Bit NOT NULL")]
		public bool Success
		{
			get
			{
				return this._Success;
			}
			set
			{
				if ((this._Success != value))
				{
					this.OnSuccessChanging(value);
					this.SendPropertyChanging();
					this._Success = value;
					this.SendPropertyChanged("Success");
					this.OnSuccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorCode", DbType="VarChar(50)")]
		public string ErrorCode
		{
			get
			{
				return this._ErrorCode;
			}
			set
			{
				if ((this._ErrorCode != value))
				{
					this.OnErrorCodeChanging(value);
					this.SendPropertyChanging();
					this._ErrorCode = value;
					this.SendPropertyChanged("ErrorCode");
					this.OnErrorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="VarChar(MAX)")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhoneNumber", DbType="VarChar(15)")]
		public string CellPhoneNumber
		{
			get
			{
				return this._CellPhoneNumber;
			}
			set
			{
				if ((this._CellPhoneNumber != value))
				{
					this.OnCellPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._CellPhoneNumber = value;
					this.SendPropertyChanged("CellPhoneNumber");
					this.OnCellPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageId", DbType="VarChar(100)")]
		public string MessageId
		{
			get
			{
				return this._MessageId;
			}
			set
			{
				if ((this._MessageId != value))
				{
					this.OnMessageIdChanging(value);
					this.SendPropertyChanging();
					this._MessageId = value;
					this.SendPropertyChanged("MessageId");
					this.OnMessageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageContents", DbType="VarChar(160)")]
		public string MessageContents
		{
			get
			{
				return this._MessageContents;
			}
			set
			{
				if ((this._MessageContents != value))
				{
					this.OnMessageContentsChanging(value);
					this.SendPropertyChanging();
					this._MessageContents = value;
					this.SendPropertyChanged("MessageContents");
					this.OnMessageContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableReference", DbType="VarChar(50)")]
		public string TableReference
		{
			get
			{
				return this._TableReference;
			}
			set
			{
				if ((this._TableReference != value))
				{
					this.OnTableReferenceChanging(value);
					this.SendPropertyChanging();
					this._TableReference = value;
					this.SendPropertyChanged("TableReference");
					this.OnTableReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordReference", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RecordReference
		{
			get
			{
				return this._RecordReference;
			}
			set
			{
				if ((this._RecordReference != value))
				{
					this.OnRecordReferenceChanging(value);
					this.SendPropertyChanging();
					this._RecordReference = value;
					this.SendPropertyChanged("RecordReference");
					this.OnRecordReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tag", DbType="VarChar(MAX)")]
		public string Tag
		{
			get
			{
				return this._Tag;
			}
			set
			{
				if ((this._Tag != value))
				{
					this.OnTagChanging(value);
					this.SendPropertyChanging();
					this._Tag = value;
					this.SendPropertyChanged("Tag");
					this.OnTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsProviderCode", DbType="Int NOT NULL")]
		public int SmsProviderCode
		{
			get
			{
				return this._SmsProviderCode;
			}
			set
			{
				if ((this._SmsProviderCode != value))
				{
					this.OnSmsProviderCodeChanging(value);
					this.SendPropertyChanging();
					this._SmsProviderCode = value;
					this.SendPropertyChanged("SmsProviderCode");
					this.OnSmsProviderCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderUserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SenderUserId
		{
			get
			{
				return this._SenderUserId;
			}
			set
			{
				if ((this._SenderUserId != value))
				{
					this.OnSenderUserIdChanging(value);
					this.SendPropertyChanging();
					this._SenderUserId = value;
					this.SendPropertyChanged("SenderUserId");
					this.OnSenderUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Delivered", DbType="Bit NOT NULL")]
		public bool Delivered
		{
			get
			{
				return this._Delivered;
			}
			set
			{
				if ((this._Delivered != value))
				{
					this.OnDeliveredChanging(value);
					this.SendPropertyChanging();
					this._Delivered = value;
					this.SendPropertyChanged("Delivered");
					this.OnDeliveredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OrganizationId
		{
			get
			{
				return this._OrganizationId;
			}
			set
			{
				if ((this._OrganizationId != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationId = value;
					this.SendPropertyChanged("OrganizationId");
					this.OnOrganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriberId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SubscriberId
		{
			get
			{
				return this._SubscriberId;
			}
			set
			{
				if ((this._SubscriberId != value))
				{
					if (this._Subscriber.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubscriberIdChanging(value);
					this.SendPropertyChanging();
					this._SubscriberId = value;
					this.SendPropertyChanged("SubscriberId");
					this.OnSubscriberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriberName", DbType="VarChar(160)")]
		public string SubscriberName
		{
			get
			{
				return this._SubscriberName;
			}
			set
			{
				if ((this._SubscriberName != value))
				{
					this.OnSubscriberNameChanging(value);
					this.SendPropertyChanging();
					this._SubscriberName = value;
					this.SendPropertyChanged("SubscriberName");
					this.OnSubscriberNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Campaign", DbType="VarChar(50)")]
		public string Campaign
		{
			get
			{
				return this._Campaign;
			}
			set
			{
				if ((this._Campaign != value))
				{
					this.OnCampaignChanging(value);
					this.SendPropertyChanging();
					this._Campaign = value;
					this.SendPropertyChanged("Campaign");
					this.OnCampaignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsCampaignId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SmsCampaignId
		{
			get
			{
				return this._SmsCampaignId;
			}
			set
			{
				if ((this._SmsCampaignId != value))
				{
					if (this._SmsCampaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSmsCampaignIdChanging(value);
					this.SendPropertyChanging();
					this._SmsCampaignId = value;
					this.SendPropertyChanged("SmsCampaignId");
					this.OnSmsCampaignIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SmsSentLog_SmsDeliveryReportLog", Storage="_SmsDeliveryReportLogs", ThisKey="SmsSentLogId", OtherKey="SmsSentLogId")]
		public EntitySet<SmsDeliveryReportLog> SmsDeliveryReportLogs
		{
			get
			{
				return this._SmsDeliveryReportLogs;
			}
			set
			{
				this._SmsDeliveryReportLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SmsCampaign_SmsSentLog", Storage="_SmsCampaign", ThisKey="SmsCampaignId", OtherKey="SmsCampaignId", IsForeignKey=true, DeleteRule="SET NULL")]
		internal SmsCampaign SmsCampaign
		{
			get
			{
				return this._SmsCampaign.Entity;
			}
			set
			{
				SmsCampaign previousValue = this._SmsCampaign.Entity;
				if (((previousValue != value) 
							|| (this._SmsCampaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SmsCampaign.Entity = null;
						previousValue.SmsSentLogs.Remove(this);
					}
					this._SmsCampaign.Entity = value;
					if ((value != null))
					{
						value.SmsSentLogs.Add(this);
						this._SmsCampaignId = value.SmsCampaignId;
					}
					else
					{
						this._SmsCampaignId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("SmsCampaign");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subscriber_SmsSentLog", Storage="_Subscriber", ThisKey="SubscriberId", OtherKey="SubscriberId", IsForeignKey=true, DeleteRule="SET NULL")]
		internal Subscriber Subscriber
		{
			get
			{
				return this._Subscriber.Entity;
			}
			set
			{
				Subscriber previousValue = this._Subscriber.Entity;
				if (((previousValue != value) 
							|| (this._Subscriber.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subscriber.Entity = null;
						previousValue.SmsSentLogs.Remove(this);
					}
					this._Subscriber.Entity = value;
					if ((value != null))
					{
						value.SmsSentLogs.Add(this);
						this._SubscriberId = value.SubscriberId;
					}
					else
					{
						this._SubscriberId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Subscriber");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_SmsSentLog", Storage="_Organization", ThisKey="OrganizationId", OtherKey="OrganizationId", IsForeignKey=true, DeleteRule="SET NULL")]
		internal Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.SmsSentLogs.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.SmsSentLogs.Add(this);
						this._OrganizationId = value.OrganizationId;
					}
					else
					{
						this._OrganizationId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SmsDeliveryReportLogs(SmsDeliveryReportLog entity)
		{
			this.SendPropertyChanging();
			entity.SmsSentLog = this;
		}
		
		private void detach_SmsDeliveryReportLogs(SmsDeliveryReportLog entity)
		{
			this.SendPropertyChanging();
			entity.SmsSentLog = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SmsSentQueueItem")]
	public partial class SmsSentQueueItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SmsSentQueueItemId;
		
		private string _CellPhoneNumber;
		
		private string _MessageContents;
		
		private string _TableReference;
		
		private System.Nullable<System.Guid> _RecordReference;
		
		private string _Tag;
		
		private int _SmsProviderCode;
		
		private System.Nullable<System.Guid> _SenderUserId;
		
		private System.Nullable<System.Guid> _OrganizationId;
		
		private System.Nullable<System.Guid> _SubscriberId;
		
		private string _SubscriberName;
		
		private string _Campaign;
		
		private System.Nullable<System.Guid> _SmsCampaignId;
		
		private bool _FailedToSend;
		
		private string _FailedToSendErrorMessage;
		
		private System.DateTime _DateCreated;
		
		private EntityRef<SmsCampaign> _SmsCampaign;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSmsSentQueueItemIdChanging(System.Guid value);
    partial void OnSmsSentQueueItemIdChanged();
    partial void OnCellPhoneNumberChanging(string value);
    partial void OnCellPhoneNumberChanged();
    partial void OnMessageContentsChanging(string value);
    partial void OnMessageContentsChanged();
    partial void OnTableReferenceChanging(string value);
    partial void OnTableReferenceChanged();
    partial void OnRecordReferenceChanging(System.Nullable<System.Guid> value);
    partial void OnRecordReferenceChanged();
    partial void OnTagChanging(string value);
    partial void OnTagChanged();
    partial void OnSmsProviderCodeChanging(int value);
    partial void OnSmsProviderCodeChanged();
    partial void OnSenderUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnSenderUserIdChanged();
    partial void OnOrganizationIdChanging(System.Nullable<System.Guid> value);
    partial void OnOrganizationIdChanged();
    partial void OnSubscriberIdChanging(System.Nullable<System.Guid> value);
    partial void OnSubscriberIdChanged();
    partial void OnSubscriberNameChanging(string value);
    partial void OnSubscriberNameChanged();
    partial void OnCampaignChanging(string value);
    partial void OnCampaignChanged();
    partial void OnSmsCampaignIdChanging(System.Nullable<System.Guid> value);
    partial void OnSmsCampaignIdChanged();
    partial void OnFailedToSendChanging(bool value);
    partial void OnFailedToSendChanged();
    partial void OnFailedToSendErrorMessageChanging(string value);
    partial void OnFailedToSendErrorMessageChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public SmsSentQueueItem()
		{
			this._SmsCampaign = default(EntityRef<SmsCampaign>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsSentQueueItemId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SmsSentQueueItemId
		{
			get
			{
				return this._SmsSentQueueItemId;
			}
			set
			{
				if ((this._SmsSentQueueItemId != value))
				{
					this.OnSmsSentQueueItemIdChanging(value);
					this.SendPropertyChanging();
					this._SmsSentQueueItemId = value;
					this.SendPropertyChanged("SmsSentQueueItemId");
					this.OnSmsSentQueueItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhoneNumber", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string CellPhoneNumber
		{
			get
			{
				return this._CellPhoneNumber;
			}
			set
			{
				if ((this._CellPhoneNumber != value))
				{
					this.OnCellPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._CellPhoneNumber = value;
					this.SendPropertyChanged("CellPhoneNumber");
					this.OnCellPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageContents", DbType="VarChar(160) NOT NULL", CanBeNull=false)]
		public string MessageContents
		{
			get
			{
				return this._MessageContents;
			}
			set
			{
				if ((this._MessageContents != value))
				{
					this.OnMessageContentsChanging(value);
					this.SendPropertyChanging();
					this._MessageContents = value;
					this.SendPropertyChanged("MessageContents");
					this.OnMessageContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableReference", DbType="VarChar(50)")]
		public string TableReference
		{
			get
			{
				return this._TableReference;
			}
			set
			{
				if ((this._TableReference != value))
				{
					this.OnTableReferenceChanging(value);
					this.SendPropertyChanging();
					this._TableReference = value;
					this.SendPropertyChanged("TableReference");
					this.OnTableReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordReference", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RecordReference
		{
			get
			{
				return this._RecordReference;
			}
			set
			{
				if ((this._RecordReference != value))
				{
					this.OnRecordReferenceChanging(value);
					this.SendPropertyChanging();
					this._RecordReference = value;
					this.SendPropertyChanged("RecordReference");
					this.OnRecordReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tag", DbType="VarChar(MAX)")]
		public string Tag
		{
			get
			{
				return this._Tag;
			}
			set
			{
				if ((this._Tag != value))
				{
					this.OnTagChanging(value);
					this.SendPropertyChanging();
					this._Tag = value;
					this.SendPropertyChanged("Tag");
					this.OnTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsProviderCode", DbType="Int NOT NULL")]
		public int SmsProviderCode
		{
			get
			{
				return this._SmsProviderCode;
			}
			set
			{
				if ((this._SmsProviderCode != value))
				{
					this.OnSmsProviderCodeChanging(value);
					this.SendPropertyChanging();
					this._SmsProviderCode = value;
					this.SendPropertyChanged("SmsProviderCode");
					this.OnSmsProviderCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderUserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SenderUserId
		{
			get
			{
				return this._SenderUserId;
			}
			set
			{
				if ((this._SenderUserId != value))
				{
					this.OnSenderUserIdChanging(value);
					this.SendPropertyChanging();
					this._SenderUserId = value;
					this.SendPropertyChanged("SenderUserId");
					this.OnSenderUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OrganizationId
		{
			get
			{
				return this._OrganizationId;
			}
			set
			{
				if ((this._OrganizationId != value))
				{
					this.OnOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationId = value;
					this.SendPropertyChanged("OrganizationId");
					this.OnOrganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriberId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SubscriberId
		{
			get
			{
				return this._SubscriberId;
			}
			set
			{
				if ((this._SubscriberId != value))
				{
					this.OnSubscriberIdChanging(value);
					this.SendPropertyChanging();
					this._SubscriberId = value;
					this.SendPropertyChanged("SubscriberId");
					this.OnSubscriberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriberName", DbType="VarChar(160)")]
		public string SubscriberName
		{
			get
			{
				return this._SubscriberName;
			}
			set
			{
				if ((this._SubscriberName != value))
				{
					this.OnSubscriberNameChanging(value);
					this.SendPropertyChanging();
					this._SubscriberName = value;
					this.SendPropertyChanged("SubscriberName");
					this.OnSubscriberNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Campaign", DbType="VarChar(50)")]
		public string Campaign
		{
			get
			{
				return this._Campaign;
			}
			set
			{
				if ((this._Campaign != value))
				{
					this.OnCampaignChanging(value);
					this.SendPropertyChanging();
					this._Campaign = value;
					this.SendPropertyChanged("Campaign");
					this.OnCampaignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsCampaignId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SmsCampaignId
		{
			get
			{
				return this._SmsCampaignId;
			}
			set
			{
				if ((this._SmsCampaignId != value))
				{
					if (this._SmsCampaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSmsCampaignIdChanging(value);
					this.SendPropertyChanging();
					this._SmsCampaignId = value;
					this.SendPropertyChanged("SmsCampaignId");
					this.OnSmsCampaignIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedToSend", DbType="Bit NOT NULL")]
		public bool FailedToSend
		{
			get
			{
				return this._FailedToSend;
			}
			set
			{
				if ((this._FailedToSend != value))
				{
					this.OnFailedToSendChanging(value);
					this.SendPropertyChanging();
					this._FailedToSend = value;
					this.SendPropertyChanged("FailedToSend");
					this.OnFailedToSendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedToSendErrorMessage", DbType="VarChar(MAX)")]
		public string FailedToSendErrorMessage
		{
			get
			{
				return this._FailedToSendErrorMessage;
			}
			set
			{
				if ((this._FailedToSendErrorMessage != value))
				{
					this.OnFailedToSendErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._FailedToSendErrorMessage = value;
					this.SendPropertyChanged("FailedToSendErrorMessage");
					this.OnFailedToSendErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SmsCampaign_SmsSentQueueItem", Storage="_SmsCampaign", ThisKey="SmsCampaignId", OtherKey="SmsCampaignId", IsForeignKey=true, DeleteRule="CASCADE")]
		internal SmsCampaign SmsCampaign
		{
			get
			{
				return this._SmsCampaign.Entity;
			}
			set
			{
				SmsCampaign previousValue = this._SmsCampaign.Entity;
				if (((previousValue != value) 
							|| (this._SmsCampaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SmsCampaign.Entity = null;
						previousValue.SmsSentQueueItems.Remove(this);
					}
					this._SmsCampaign.Entity = value;
					if ((value != null))
					{
						value.SmsSentQueueItems.Add(this);
						this._SmsCampaignId = value.SmsCampaignId;
					}
					else
					{
						this._SmsCampaignId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("SmsCampaign");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Subscriber")]
	public partial class Subscriber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SubscriberId;
		
		private string _CellPhoneNumber;
		
		private string _Name;
		
		private bool _Enabled;
		
		private System.DateTime _DateCreated;
		
		private EntitySet<SmsReceivedLog> _SmsReceivedLogs;
		
		private EntitySet<SmsSentLog> _SmsSentLogs;
		
		private EntitySet<Subscription> _Subscriptions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubscriberIdChanging(System.Guid value);
    partial void OnSubscriberIdChanged();
    partial void OnCellPhoneNumberChanging(string value);
    partial void OnCellPhoneNumberChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public Subscriber()
		{
			this._SmsReceivedLogs = new EntitySet<SmsReceivedLog>(new Action<SmsReceivedLog>(this.attach_SmsReceivedLogs), new Action<SmsReceivedLog>(this.detach_SmsReceivedLogs));
			this._SmsSentLogs = new EntitySet<SmsSentLog>(new Action<SmsSentLog>(this.attach_SmsSentLogs), new Action<SmsSentLog>(this.detach_SmsSentLogs));
			this._Subscriptions = new EntitySet<Subscription>(new Action<Subscription>(this.attach_Subscriptions), new Action<Subscription>(this.detach_Subscriptions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriberId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SubscriberId
		{
			get
			{
				return this._SubscriberId;
			}
			set
			{
				if ((this._SubscriberId != value))
				{
					this.OnSubscriberIdChanging(value);
					this.SendPropertyChanging();
					this._SubscriberId = value;
					this.SendPropertyChanged("SubscriberId");
					this.OnSubscriberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhoneNumber", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string CellPhoneNumber
		{
			get
			{
				return this._CellPhoneNumber;
			}
			set
			{
				if ((this._CellPhoneNumber != value))
				{
					this.OnCellPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._CellPhoneNumber = value;
					this.SendPropertyChanged("CellPhoneNumber");
					this.OnCellPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(160)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subscriber_SmsReceivedLog", Storage="_SmsReceivedLogs", ThisKey="SubscriberId", OtherKey="SubscriberId")]
		public EntitySet<SmsReceivedLog> SmsReceivedLogs
		{
			get
			{
				return this._SmsReceivedLogs;
			}
			set
			{
				this._SmsReceivedLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subscriber_SmsSentLog", Storage="_SmsSentLogs", ThisKey="SubscriberId", OtherKey="SubscriberId")]
		public EntitySet<SmsSentLog> SmsSentLogs
		{
			get
			{
				return this._SmsSentLogs;
			}
			set
			{
				this._SmsSentLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subscriber_Subscription", Storage="_Subscriptions", ThisKey="SubscriberId", OtherKey="SubscriberId")]
		public EntitySet<Subscription> Subscriptions
		{
			get
			{
				return this._Subscriptions;
			}
			set
			{
				this._Subscriptions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SmsReceivedLogs(SmsReceivedLog entity)
		{
			this.SendPropertyChanging();
			entity.Subscriber = this;
		}
		
		private void detach_SmsReceivedLogs(SmsReceivedLog entity)
		{
			this.SendPropertyChanging();
			entity.Subscriber = null;
		}
		
		private void attach_SmsSentLogs(SmsSentLog entity)
		{
			this.SendPropertyChanging();
			entity.Subscriber = this;
		}
		
		private void detach_SmsSentLogs(SmsSentLog entity)
		{
			this.SendPropertyChanging();
			entity.Subscriber = null;
		}
		
		private void attach_Subscriptions(Subscription entity)
		{
			this.SendPropertyChanging();
			entity.Subscriber = this;
		}
		
		private void detach_Subscriptions(Subscription entity)
		{
			this.SendPropertyChanging();
			entity.Subscriber = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Country")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CountryId;
		
		private string _CountryCode;
		
		private string _CountryName;
		
		private System.DateTime _DateCreated;
		
		private EntitySet<PublicHoliday> _PublicHolidays;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryIdChanging(System.Guid value);
    partial void OnCountryIdChanged();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public Country()
		{
			this._PublicHolidays = new EntitySet<PublicHoliday>(new Action<PublicHoliday>(this.attach_PublicHolidays), new Action<PublicHoliday>(this.detach_PublicHolidays));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_PublicHoliday", Storage="_PublicHolidays", ThisKey="CountryId", OtherKey="CountryId")]
		public EntitySet<PublicHoliday> PublicHolidays
		{
			get
			{
				return this._PublicHolidays;
			}
			set
			{
				this._PublicHolidays.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PublicHolidays(PublicHoliday entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_PublicHolidays(PublicHoliday entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PublicHoliday")]
	public partial class PublicHoliday : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PublicHolidayId;
		
		private System.Guid _CountryId;
		
		private string _EventName;
		
		private string _DateIdentifier;
		
		private int _Year;
		
		private int _Month;
		
		private int _Day;
		
		private System.DateTime _HolidayDate;
		
		private System.DateTime _DateCreated;
		
		private EntityRef<Country> _Country;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPublicHolidayIdChanging(System.Guid value);
    partial void OnPublicHolidayIdChanged();
    partial void OnCountryIdChanging(System.Guid value);
    partial void OnCountryIdChanged();
    partial void OnEventNameChanging(string value);
    partial void OnEventNameChanged();
    partial void OnDateIdentifierChanging(string value);
    partial void OnDateIdentifierChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnMonthChanging(int value);
    partial void OnMonthChanged();
    partial void OnDayChanging(int value);
    partial void OnDayChanged();
    partial void OnHolidayDateChanging(System.DateTime value);
    partial void OnHolidayDateChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public PublicHoliday()
		{
			this._Country = default(EntityRef<Country>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicHolidayId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PublicHolidayId
		{
			get
			{
				return this._PublicHolidayId;
			}
			set
			{
				if ((this._PublicHolidayId != value))
				{
					this.OnPublicHolidayIdChanging(value);
					this.SendPropertyChanging();
					this._PublicHolidayId = value;
					this.SendPropertyChanged("PublicHolidayId");
					this.OnPublicHolidayIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string EventName
		{
			get
			{
				return this._EventName;
			}
			set
			{
				if ((this._EventName != value))
				{
					this.OnEventNameChanging(value);
					this.SendPropertyChanging();
					this._EventName = value;
					this.SendPropertyChanged("EventName");
					this.OnEventNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateIdentifier", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DateIdentifier
		{
			get
			{
				return this._DateIdentifier;
			}
			set
			{
				if ((this._DateIdentifier != value))
				{
					this.OnDateIdentifierChanging(value);
					this.SendPropertyChanging();
					this._DateIdentifier = value;
					this.SendPropertyChanged("DateIdentifier");
					this.OnDateIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int NOT NULL")]
		public int Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="Int NOT NULL")]
		public int Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayDate", DbType="DateTime NOT NULL")]
		public System.DateTime HolidayDate
		{
			get
			{
				return this._HolidayDate;
			}
			set
			{
				if ((this._HolidayDate != value))
				{
					this.OnHolidayDateChanging(value);
					this.SendPropertyChanging();
					this._HolidayDate = value;
					this.SendPropertyChanged("HolidayDate");
					this.OnHolidayDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_PublicHoliday", Storage="_Country", ThisKey="CountryId", OtherKey="CountryId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		internal Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.PublicHolidays.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.PublicHolidays.Add(this);
						this._CountryId = value.CountryId;
					}
					else
					{
						this._CountryId = default(System.Guid);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Subscription")]
	public partial class Subscription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SubscriptionId;
		
		private System.Guid _OrganizationId;
		
		private System.Guid _SubscriberId;
		
		private bool _Enabled;
		
		private string _CustomerFullName;
		
		private string _CustomerEmailAddress;
		
		private string _CustomerIdentifier;
		
		private string _CustomerPhysicalAddress;
		
		private string _CustomerNotes;
		
		private System.DateTime _DateCreated;
		
		private EntitySet<Schedule> _Schedules;
		
		private EntityRef<Subscriber> _Subscriber;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubscriptionIdChanging(System.Guid value);
    partial void OnSubscriptionIdChanged();
    partial void OnOrganizationIdChanging(System.Guid value);
    partial void OnOrganizationIdChanged();
    partial void OnSubscriberIdChanging(System.Guid value);
    partial void OnSubscriberIdChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    partial void OnCustomerFullNameChanging(string value);
    partial void OnCustomerFullNameChanged();
    partial void OnCustomerEmailAddressChanging(string value);
    partial void OnCustomerEmailAddressChanged();
    partial void OnCustomerIdentifierChanging(string value);
    partial void OnCustomerIdentifierChanged();
    partial void OnCustomerPhysicalAddressChanging(string value);
    partial void OnCustomerPhysicalAddressChanged();
    partial void OnCustomerNotesChanging(string value);
    partial void OnCustomerNotesChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public Subscription()
		{
			this._Schedules = new EntitySet<Schedule>(new Action<Schedule>(this.attach_Schedules), new Action<Schedule>(this.detach_Schedules));
			this._Subscriber = default(EntityRef<Subscriber>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriptionId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SubscriptionId
		{
			get
			{
				return this._SubscriptionId;
			}
			set
			{
				if ((this._SubscriptionId != value))
				{
					this.OnSubscriptionIdChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionId = value;
					this.SendPropertyChanged("SubscriptionId");
					this.OnSubscriptionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OrganizationId
		{
			get
			{
				return this._OrganizationId;
			}
			set
			{
				if ((this._OrganizationId != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationId = value;
					this.SendPropertyChanged("OrganizationId");
					this.OnOrganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriberId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SubscriberId
		{
			get
			{
				return this._SubscriberId;
			}
			set
			{
				if ((this._SubscriberId != value))
				{
					if (this._Subscriber.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubscriberIdChanging(value);
					this.SendPropertyChanging();
					this._SubscriberId = value;
					this.SendPropertyChanged("SubscriberId");
					this.OnSubscriberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerFullName", DbType="VarChar(100)")]
		public string CustomerFullName
		{
			get
			{
				return this._CustomerFullName;
			}
			set
			{
				if ((this._CustomerFullName != value))
				{
					this.OnCustomerFullNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerFullName = value;
					this.SendPropertyChanged("CustomerFullName");
					this.OnCustomerFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerEmailAddress", DbType="VarChar(255)")]
		public string CustomerEmailAddress
		{
			get
			{
				return this._CustomerEmailAddress;
			}
			set
			{
				if ((this._CustomerEmailAddress != value))
				{
					this.OnCustomerEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._CustomerEmailAddress = value;
					this.SendPropertyChanged("CustomerEmailAddress");
					this.OnCustomerEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerIdentifier", DbType="VarChar(50)")]
		public string CustomerIdentifier
		{
			get
			{
				return this._CustomerIdentifier;
			}
			set
			{
				if ((this._CustomerIdentifier != value))
				{
					this.OnCustomerIdentifierChanging(value);
					this.SendPropertyChanging();
					this._CustomerIdentifier = value;
					this.SendPropertyChanged("CustomerIdentifier");
					this.OnCustomerIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPhysicalAddress", DbType="VarChar(MAX)")]
		public string CustomerPhysicalAddress
		{
			get
			{
				return this._CustomerPhysicalAddress;
			}
			set
			{
				if ((this._CustomerPhysicalAddress != value))
				{
					this.OnCustomerPhysicalAddressChanging(value);
					this.SendPropertyChanging();
					this._CustomerPhysicalAddress = value;
					this.SendPropertyChanged("CustomerPhysicalAddress");
					this.OnCustomerPhysicalAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNotes", DbType="VarChar(MAX)")]
		public string CustomerNotes
		{
			get
			{
				return this._CustomerNotes;
			}
			set
			{
				if ((this._CustomerNotes != value))
				{
					this.OnCustomerNotesChanging(value);
					this.SendPropertyChanging();
					this._CustomerNotes = value;
					this.SendPropertyChanged("CustomerNotes");
					this.OnCustomerNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subscription_Schedule", Storage="_Schedules", ThisKey="SubscriptionId", OtherKey="SubscriptionId")]
		public EntitySet<Schedule> Schedules
		{
			get
			{
				return this._Schedules;
			}
			set
			{
				this._Schedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subscriber_Subscription", Storage="_Subscriber", ThisKey="SubscriberId", OtherKey="SubscriberId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		internal Subscriber Subscriber
		{
			get
			{
				return this._Subscriber.Entity;
			}
			set
			{
				Subscriber previousValue = this._Subscriber.Entity;
				if (((previousValue != value) 
							|| (this._Subscriber.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subscriber.Entity = null;
						previousValue.Subscriptions.Remove(this);
					}
					this._Subscriber.Entity = value;
					if ((value != null))
					{
						value.Subscriptions.Add(this);
						this._SubscriberId = value.SubscriberId;
					}
					else
					{
						this._SubscriberId = default(System.Guid);
					}
					this.SendPropertyChanged("Subscriber");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_Subscription", Storage="_Organization", ThisKey="OrganizationId", OtherKey="OrganizationId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		internal Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.Subscriptions.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.Subscriptions.Add(this);
						this._OrganizationId = value.OrganizationId;
					}
					else
					{
						this._OrganizationId = default(System.Guid);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.Subscription = this;
		}
		
		private void detach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.Subscription = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScheduleEntry")]
	public partial class ScheduleEntry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ScheduleEntryId;
		
		private System.Guid _ScheduleId;
		
		private System.DateTime _EntryDate;
		
		private string _EntryDateFormatted;
		
		private string _EntryDateDayOfWeek;
		
		private System.DateTime _NotificationDate;
		
		private string _NotificationDateFormatted;
		
		private string _NotificationDateDayOfWeek;
		
		private bool _SMSNotificationSent;
		
		private string _SMSMessageId;
		
		private System.Nullable<System.DateTime> _SMSDateSent;
		
		private System.Nullable<System.Guid> _SmsSentLogId;
		
		private System.DateTime _DateCreated;
		
		private EntityRef<Schedule> _Schedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScheduleEntryIdChanging(System.Guid value);
    partial void OnScheduleEntryIdChanged();
    partial void OnScheduleIdChanging(System.Guid value);
    partial void OnScheduleIdChanged();
    partial void OnEntryDateChanging(System.DateTime value);
    partial void OnEntryDateChanged();
    partial void OnEntryDateFormattedChanging(string value);
    partial void OnEntryDateFormattedChanged();
    partial void OnEntryDateDayOfWeekChanging(string value);
    partial void OnEntryDateDayOfWeekChanged();
    partial void OnNotificationDateChanging(System.DateTime value);
    partial void OnNotificationDateChanged();
    partial void OnNotificationDateFormattedChanging(string value);
    partial void OnNotificationDateFormattedChanged();
    partial void OnNotificationDateDayOfWeekChanging(string value);
    partial void OnNotificationDateDayOfWeekChanged();
    partial void OnSMSNotificationSentChanging(bool value);
    partial void OnSMSNotificationSentChanged();
    partial void OnSMSMessageIdChanging(string value);
    partial void OnSMSMessageIdChanged();
    partial void OnSMSDateSentChanging(System.Nullable<System.DateTime> value);
    partial void OnSMSDateSentChanged();
    partial void OnSmsSentLogIdChanging(System.Nullable<System.Guid> value);
    partial void OnSmsSentLogIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public ScheduleEntry()
		{
			this._Schedule = default(EntityRef<Schedule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleEntryId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ScheduleEntryId
		{
			get
			{
				return this._ScheduleEntryId;
			}
			set
			{
				if ((this._ScheduleEntryId != value))
				{
					this.OnScheduleEntryIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduleEntryId = value;
					this.SendPropertyChanged("ScheduleEntryId");
					this.OnScheduleEntryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ScheduleId
		{
			get
			{
				return this._ScheduleId;
			}
			set
			{
				if ((this._ScheduleId != value))
				{
					if (this._Schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduleId = value;
					this.SendPropertyChanged("ScheduleId");
					this.OnScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this.OnEntryDateChanging(value);
					this.SendPropertyChanging();
					this._EntryDate = value;
					this.SendPropertyChanged("EntryDate");
					this.OnEntryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateFormatted", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EntryDateFormatted
		{
			get
			{
				return this._EntryDateFormatted;
			}
			set
			{
				if ((this._EntryDateFormatted != value))
				{
					this.OnEntryDateFormattedChanging(value);
					this.SendPropertyChanging();
					this._EntryDateFormatted = value;
					this.SendPropertyChanged("EntryDateFormatted");
					this.OnEntryDateFormattedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateDayOfWeek", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string EntryDateDayOfWeek
		{
			get
			{
				return this._EntryDateDayOfWeek;
			}
			set
			{
				if ((this._EntryDateDayOfWeek != value))
				{
					this.OnEntryDateDayOfWeekChanging(value);
					this.SendPropertyChanging();
					this._EntryDateDayOfWeek = value;
					this.SendPropertyChanged("EntryDateDayOfWeek");
					this.OnEntryDateDayOfWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationDate", DbType="DateTime NOT NULL")]
		public System.DateTime NotificationDate
		{
			get
			{
				return this._NotificationDate;
			}
			set
			{
				if ((this._NotificationDate != value))
				{
					this.OnNotificationDateChanging(value);
					this.SendPropertyChanging();
					this._NotificationDate = value;
					this.SendPropertyChanged("NotificationDate");
					this.OnNotificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationDateFormatted", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NotificationDateFormatted
		{
			get
			{
				return this._NotificationDateFormatted;
			}
			set
			{
				if ((this._NotificationDateFormatted != value))
				{
					this.OnNotificationDateFormattedChanging(value);
					this.SendPropertyChanging();
					this._NotificationDateFormatted = value;
					this.SendPropertyChanged("NotificationDateFormatted");
					this.OnNotificationDateFormattedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationDateDayOfWeek", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string NotificationDateDayOfWeek
		{
			get
			{
				return this._NotificationDateDayOfWeek;
			}
			set
			{
				if ((this._NotificationDateDayOfWeek != value))
				{
					this.OnNotificationDateDayOfWeekChanging(value);
					this.SendPropertyChanging();
					this._NotificationDateDayOfWeek = value;
					this.SendPropertyChanged("NotificationDateDayOfWeek");
					this.OnNotificationDateDayOfWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMSNotificationSent", DbType="Bit NOT NULL")]
		public bool SMSNotificationSent
		{
			get
			{
				return this._SMSNotificationSent;
			}
			set
			{
				if ((this._SMSNotificationSent != value))
				{
					this.OnSMSNotificationSentChanging(value);
					this.SendPropertyChanging();
					this._SMSNotificationSent = value;
					this.SendPropertyChanged("SMSNotificationSent");
					this.OnSMSNotificationSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMSMessageId", DbType="VarChar(100)")]
		public string SMSMessageId
		{
			get
			{
				return this._SMSMessageId;
			}
			set
			{
				if ((this._SMSMessageId != value))
				{
					this.OnSMSMessageIdChanging(value);
					this.SendPropertyChanging();
					this._SMSMessageId = value;
					this.SendPropertyChanged("SMSMessageId");
					this.OnSMSMessageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMSDateSent", DbType="DateTime")]
		public System.Nullable<System.DateTime> SMSDateSent
		{
			get
			{
				return this._SMSDateSent;
			}
			set
			{
				if ((this._SMSDateSent != value))
				{
					this.OnSMSDateSentChanging(value);
					this.SendPropertyChanging();
					this._SMSDateSent = value;
					this.SendPropertyChanged("SMSDateSent");
					this.OnSMSDateSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsSentLogId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SmsSentLogId
		{
			get
			{
				return this._SmsSentLogId;
			}
			set
			{
				if ((this._SmsSentLogId != value))
				{
					this.OnSmsSentLogIdChanging(value);
					this.SendPropertyChanging();
					this._SmsSentLogId = value;
					this.SendPropertyChanged("SmsSentLogId");
					this.OnSmsSentLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleEntry", Storage="_Schedule", ThisKey="ScheduleId", OtherKey="ScheduleId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		internal Schedule Schedule
		{
			get
			{
				return this._Schedule.Entity;
			}
			set
			{
				Schedule previousValue = this._Schedule.Entity;
				if (((previousValue != value) 
							|| (this._Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schedule.Entity = null;
						previousValue.ScheduleEntries.Remove(this);
					}
					this._Schedule.Entity = value;
					if ((value != null))
					{
						value.ScheduleEntries.Add(this);
						this._ScheduleId = value.ScheduleId;
					}
					else
					{
						this._ScheduleId = default(System.Guid);
					}
					this.SendPropertyChanged("Schedule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organization")]
	public partial class Organization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _OrganizationId;
		
		private string _Name;
		
		private string _Identifier;
		
		private string _EmailAddress;
		
		private string _Address;
		
		private long _SmsCreditsBalance;
		
		private bool _AllowSmsCreditsDebt;
		
		private System.Nullable<System.Guid> _OrganizationSubscriptionTypeId;
		
		private bool _OrganizationSubscriptionEnabled;
		
		private int _BillingDayOfTheMonth;
		
		private bool _IsMondayWorkDay;
		
		private bool _IsTuesdayWorkDay;
		
		private bool _IsWednesdayWorkDay;
		
		private bool _IsThursdayWorkDay;
		
		private bool _IsFridayWorkDay;
		
		private bool _IsSaturdayWorkDay;
		
		private bool _IsSundayWorkDay;
		
		private System.Nullable<System.Guid> _AccountManagerUserId;
		
		private System.DateTime _DateCreated;
		
		private EntitySet<Invoice> _Invoices;
		
		private EntitySet<Order> _Orders;
		
		private EntitySet<SmsMessageTemplate> _SmsMessageTemplates;
		
		private EntitySet<SmsReceivedLog> _SmsReceivedLogs;
		
		private EntitySet<SmsSentLog> _SmsSentLogs;
		
		private EntitySet<Subscription> _Subscriptions;
		
		private EntitySet<User> _Users;
		
		private EntityRef<OrganizationSubscriptionType> _OrganizationSubscriptionType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrganizationIdChanging(System.Guid value);
    partial void OnOrganizationIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIdentifierChanging(string value);
    partial void OnIdentifierChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnSmsCreditsBalanceChanging(long value);
    partial void OnSmsCreditsBalanceChanged();
    partial void OnAllowSmsCreditsDebtChanging(bool value);
    partial void OnAllowSmsCreditsDebtChanged();
    partial void OnOrganizationSubscriptionTypeIdChanging(System.Nullable<System.Guid> value);
    partial void OnOrganizationSubscriptionTypeIdChanged();
    partial void OnOrganizationSubscriptionEnabledChanging(bool value);
    partial void OnOrganizationSubscriptionEnabledChanged();
    partial void OnBillingDayOfTheMonthChanging(int value);
    partial void OnBillingDayOfTheMonthChanged();
    partial void OnIsMondayWorkDayChanging(bool value);
    partial void OnIsMondayWorkDayChanged();
    partial void OnIsTuesdayWorkDayChanging(bool value);
    partial void OnIsTuesdayWorkDayChanged();
    partial void OnIsWednesdayWorkDayChanging(bool value);
    partial void OnIsWednesdayWorkDayChanged();
    partial void OnIsThursdayWorkDayChanging(bool value);
    partial void OnIsThursdayWorkDayChanged();
    partial void OnIsFridayWorkDayChanging(bool value);
    partial void OnIsFridayWorkDayChanged();
    partial void OnIsSaturdayWorkDayChanging(bool value);
    partial void OnIsSaturdayWorkDayChanged();
    partial void OnIsSundayWorkDayChanging(bool value);
    partial void OnIsSundayWorkDayChanged();
    partial void OnAccountManagerUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnAccountManagerUserIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public Organization()
		{
			this._Invoices = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoices), new Action<Invoice>(this.detach_Invoices));
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._SmsMessageTemplates = new EntitySet<SmsMessageTemplate>(new Action<SmsMessageTemplate>(this.attach_SmsMessageTemplates), new Action<SmsMessageTemplate>(this.detach_SmsMessageTemplates));
			this._SmsReceivedLogs = new EntitySet<SmsReceivedLog>(new Action<SmsReceivedLog>(this.attach_SmsReceivedLogs), new Action<SmsReceivedLog>(this.detach_SmsReceivedLogs));
			this._SmsSentLogs = new EntitySet<SmsSentLog>(new Action<SmsSentLog>(this.attach_SmsSentLogs), new Action<SmsSentLog>(this.detach_SmsSentLogs));
			this._Subscriptions = new EntitySet<Subscription>(new Action<Subscription>(this.attach_Subscriptions), new Action<Subscription>(this.detach_Subscriptions));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			this._OrganizationSubscriptionType = default(EntityRef<OrganizationSubscriptionType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid OrganizationId
		{
			get
			{
				return this._OrganizationId;
			}
			set
			{
				if ((this._OrganizationId != value))
				{
					this.OnOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationId = value;
					this.SendPropertyChanged("OrganizationId");
					this.OnOrganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Identifier", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Identifier
		{
			get
			{
				return this._Identifier;
			}
			set
			{
				if ((this._Identifier != value))
				{
					this.OnIdentifierChanging(value);
					this.SendPropertyChanging();
					this._Identifier = value;
					this.SendPropertyChanged("Identifier");
					this.OnIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsCreditsBalance", DbType="BigInt NOT NULL")]
		public long SmsCreditsBalance
		{
			get
			{
				return this._SmsCreditsBalance;
			}
			set
			{
				if ((this._SmsCreditsBalance != value))
				{
					this.OnSmsCreditsBalanceChanging(value);
					this.SendPropertyChanging();
					this._SmsCreditsBalance = value;
					this.SendPropertyChanged("SmsCreditsBalance");
					this.OnSmsCreditsBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowSmsCreditsDebt", DbType="Bit NOT NULL")]
		public bool AllowSmsCreditsDebt
		{
			get
			{
				return this._AllowSmsCreditsDebt;
			}
			set
			{
				if ((this._AllowSmsCreditsDebt != value))
				{
					this.OnAllowSmsCreditsDebtChanging(value);
					this.SendPropertyChanging();
					this._AllowSmsCreditsDebt = value;
					this.SendPropertyChanged("AllowSmsCreditsDebt");
					this.OnAllowSmsCreditsDebtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationSubscriptionTypeId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OrganizationSubscriptionTypeId
		{
			get
			{
				return this._OrganizationSubscriptionTypeId;
			}
			set
			{
				if ((this._OrganizationSubscriptionTypeId != value))
				{
					if (this._OrganizationSubscriptionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganizationSubscriptionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationSubscriptionTypeId = value;
					this.SendPropertyChanged("OrganizationSubscriptionTypeId");
					this.OnOrganizationSubscriptionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationSubscriptionEnabled", DbType="Bit NOT NULL")]
		public bool OrganizationSubscriptionEnabled
		{
			get
			{
				return this._OrganizationSubscriptionEnabled;
			}
			set
			{
				if ((this._OrganizationSubscriptionEnabled != value))
				{
					this.OnOrganizationSubscriptionEnabledChanging(value);
					this.SendPropertyChanging();
					this._OrganizationSubscriptionEnabled = value;
					this.SendPropertyChanged("OrganizationSubscriptionEnabled");
					this.OnOrganizationSubscriptionEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingDayOfTheMonth", DbType="Int NOT NULL")]
		public int BillingDayOfTheMonth
		{
			get
			{
				return this._BillingDayOfTheMonth;
			}
			set
			{
				if ((this._BillingDayOfTheMonth != value))
				{
					this.OnBillingDayOfTheMonthChanging(value);
					this.SendPropertyChanging();
					this._BillingDayOfTheMonth = value;
					this.SendPropertyChanged("BillingDayOfTheMonth");
					this.OnBillingDayOfTheMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMondayWorkDay", DbType="Bit NOT NULL")]
		public bool IsMondayWorkDay
		{
			get
			{
				return this._IsMondayWorkDay;
			}
			set
			{
				if ((this._IsMondayWorkDay != value))
				{
					this.OnIsMondayWorkDayChanging(value);
					this.SendPropertyChanging();
					this._IsMondayWorkDay = value;
					this.SendPropertyChanged("IsMondayWorkDay");
					this.OnIsMondayWorkDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTuesdayWorkDay", DbType="Bit NOT NULL")]
		public bool IsTuesdayWorkDay
		{
			get
			{
				return this._IsTuesdayWorkDay;
			}
			set
			{
				if ((this._IsTuesdayWorkDay != value))
				{
					this.OnIsTuesdayWorkDayChanging(value);
					this.SendPropertyChanging();
					this._IsTuesdayWorkDay = value;
					this.SendPropertyChanged("IsTuesdayWorkDay");
					this.OnIsTuesdayWorkDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWednesdayWorkDay", DbType="Bit NOT NULL")]
		public bool IsWednesdayWorkDay
		{
			get
			{
				return this._IsWednesdayWorkDay;
			}
			set
			{
				if ((this._IsWednesdayWorkDay != value))
				{
					this.OnIsWednesdayWorkDayChanging(value);
					this.SendPropertyChanging();
					this._IsWednesdayWorkDay = value;
					this.SendPropertyChanged("IsWednesdayWorkDay");
					this.OnIsWednesdayWorkDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsThursdayWorkDay", DbType="Bit NOT NULL")]
		public bool IsThursdayWorkDay
		{
			get
			{
				return this._IsThursdayWorkDay;
			}
			set
			{
				if ((this._IsThursdayWorkDay != value))
				{
					this.OnIsThursdayWorkDayChanging(value);
					this.SendPropertyChanging();
					this._IsThursdayWorkDay = value;
					this.SendPropertyChanged("IsThursdayWorkDay");
					this.OnIsThursdayWorkDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFridayWorkDay", DbType="Bit NOT NULL")]
		public bool IsFridayWorkDay
		{
			get
			{
				return this._IsFridayWorkDay;
			}
			set
			{
				if ((this._IsFridayWorkDay != value))
				{
					this.OnIsFridayWorkDayChanging(value);
					this.SendPropertyChanging();
					this._IsFridayWorkDay = value;
					this.SendPropertyChanged("IsFridayWorkDay");
					this.OnIsFridayWorkDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSaturdayWorkDay", DbType="Bit NOT NULL")]
		public bool IsSaturdayWorkDay
		{
			get
			{
				return this._IsSaturdayWorkDay;
			}
			set
			{
				if ((this._IsSaturdayWorkDay != value))
				{
					this.OnIsSaturdayWorkDayChanging(value);
					this.SendPropertyChanging();
					this._IsSaturdayWorkDay = value;
					this.SendPropertyChanged("IsSaturdayWorkDay");
					this.OnIsSaturdayWorkDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSundayWorkDay", DbType="Bit NOT NULL")]
		public bool IsSundayWorkDay
		{
			get
			{
				return this._IsSundayWorkDay;
			}
			set
			{
				if ((this._IsSundayWorkDay != value))
				{
					this.OnIsSundayWorkDayChanging(value);
					this.SendPropertyChanging();
					this._IsSundayWorkDay = value;
					this.SendPropertyChanged("IsSundayWorkDay");
					this.OnIsSundayWorkDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountManagerUserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AccountManagerUserId
		{
			get
			{
				return this._AccountManagerUserId;
			}
			set
			{
				if ((this._AccountManagerUserId != value))
				{
					this.OnAccountManagerUserIdChanging(value);
					this.SendPropertyChanging();
					this._AccountManagerUserId = value;
					this.SendPropertyChanged("AccountManagerUserId");
					this.OnAccountManagerUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_Invoice", Storage="_Invoices", ThisKey="OrganizationId", OtherKey="OrganizationId")]
		public EntitySet<Invoice> Invoices
		{
			get
			{
				return this._Invoices;
			}
			set
			{
				this._Invoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_Order", Storage="_Orders", ThisKey="OrganizationId", OtherKey="OrganizationId")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_SmsMessageTemplate", Storage="_SmsMessageTemplates", ThisKey="OrganizationId", OtherKey="OrganizationId")]
		public EntitySet<SmsMessageTemplate> SmsMessageTemplates
		{
			get
			{
				return this._SmsMessageTemplates;
			}
			set
			{
				this._SmsMessageTemplates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_SmsReceivedLog", Storage="_SmsReceivedLogs", ThisKey="OrganizationId", OtherKey="OrganizationId")]
		public EntitySet<SmsReceivedLog> SmsReceivedLogs
		{
			get
			{
				return this._SmsReceivedLogs;
			}
			set
			{
				this._SmsReceivedLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_SmsSentLog", Storage="_SmsSentLogs", ThisKey="OrganizationId", OtherKey="OrganizationId")]
		public EntitySet<SmsSentLog> SmsSentLogs
		{
			get
			{
				return this._SmsSentLogs;
			}
			set
			{
				this._SmsSentLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_Subscription", Storage="_Subscriptions", ThisKey="OrganizationId", OtherKey="OrganizationId")]
		public EntitySet<Subscription> Subscriptions
		{
			get
			{
				return this._Subscriptions;
			}
			set
			{
				this._Subscriptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_User", Storage="_Users", ThisKey="OrganizationId", OtherKey="OrganizationId")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizationSubscriptionType_Organization", Storage="_OrganizationSubscriptionType", ThisKey="OrganizationSubscriptionTypeId", OtherKey="OrganizationSubscriptionTypeId", IsForeignKey=true, DeleteRule="SET NULL")]
		internal OrganizationSubscriptionType OrganizationSubscriptionType
		{
			get
			{
				return this._OrganizationSubscriptionType.Entity;
			}
			set
			{
				OrganizationSubscriptionType previousValue = this._OrganizationSubscriptionType.Entity;
				if (((previousValue != value) 
							|| (this._OrganizationSubscriptionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizationSubscriptionType.Entity = null;
						previousValue.Organizations.Remove(this);
					}
					this._OrganizationSubscriptionType.Entity = value;
					if ((value != null))
					{
						value.Organizations.Add(this);
						this._OrganizationSubscriptionTypeId = value.OrganizationSubscriptionTypeId;
					}
					else
					{
						this._OrganizationSubscriptionTypeId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("OrganizationSubscriptionType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_SmsMessageTemplates(SmsMessageTemplate entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_SmsMessageTemplates(SmsMessageTemplate entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_SmsReceivedLogs(SmsReceivedLog entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_SmsReceivedLogs(SmsReceivedLog entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_SmsSentLogs(SmsSentLog entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_SmsSentLogs(SmsSentLog entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_Subscriptions(Subscription entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_Subscriptions(Subscription entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _EmailAddress;
		
		private string _CellPhoneNumber;
		
		private string _Password;
		
		private System.Nullable<System.Guid> _OrganizationId;
		
		private int _RoleId;
		
		private System.Nullable<System.DateTime> _LastLoginDate;
		
		private System.Nullable<System.DateTime> _LastActivityDate;
		
		private System.DateTime _DateCreated;
		
		private EntitySet<WebRequestActivity> _WebRequestActivities;
		
		private EntitySet<Invoice> _Invoices;
		
		private EntitySet<Order> _Orders;
		
		private EntitySet<ServerAction> _ServerActions;
		
		private EntitySet<ServerError> _ServerErrors;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnCellPhoneNumberChanging(string value);
    partial void OnCellPhoneNumberChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnOrganizationIdChanging(System.Nullable<System.Guid> value);
    partial void OnOrganizationIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnLastLoginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginDateChanged();
    partial void OnLastActivityDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastActivityDateChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public User()
		{
			this._WebRequestActivities = new EntitySet<WebRequestActivity>(new Action<WebRequestActivity>(this.attach_WebRequestActivities), new Action<WebRequestActivity>(this.detach_WebRequestActivities));
			this._Invoices = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoices), new Action<Invoice>(this.detach_Invoices));
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._ServerActions = new EntitySet<ServerAction>(new Action<ServerAction>(this.attach_ServerActions), new Action<ServerAction>(this.detach_ServerActions));
			this._ServerErrors = new EntitySet<ServerError>(new Action<ServerError>(this.attach_ServerErrors), new Action<ServerError>(this.detach_ServerErrors));
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhoneNumber", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string CellPhoneNumber
		{
			get
			{
				return this._CellPhoneNumber;
			}
			set
			{
				if ((this._CellPhoneNumber != value))
				{
					this.OnCellPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._CellPhoneNumber = value;
					this.SendPropertyChanged("CellPhoneNumber");
					this.OnCellPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OrganizationId
		{
			get
			{
				return this._OrganizationId;
			}
			set
			{
				if ((this._OrganizationId != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationId = value;
					this.SendPropertyChanged("OrganizationId");
					this.OnOrganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WebRequestActivity", Storage="_WebRequestActivities", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<WebRequestActivity> WebRequestActivities
		{
			get
			{
				return this._WebRequestActivities;
			}
			set
			{
				this._WebRequestActivities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Invoice", Storage="_Invoices", ThisKey="UserId", OtherKey="CreatedByUserId")]
		public EntitySet<Invoice> Invoices
		{
			get
			{
				return this._Invoices;
			}
			set
			{
				this._Invoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Order", Storage="_Orders", ThisKey="UserId", OtherKey="CreatedByUserId")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ServerAction", Storage="_ServerActions", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<ServerAction> ServerActions
		{
			get
			{
				return this._ServerActions;
			}
			set
			{
				this._ServerActions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ServerError", Storage="_ServerErrors", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<ServerError> ServerErrors
		{
			get
			{
				return this._ServerErrors;
			}
			set
			{
				this._ServerErrors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_User", Storage="_Organization", ThisKey="OrganizationId", OtherKey="OrganizationId", IsForeignKey=true, DeleteRule="SET NULL")]
		internal Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._OrganizationId = value.OrganizationId;
					}
					else
					{
						this._OrganizationId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WebRequestActivities(WebRequestActivity entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_WebRequestActivities(WebRequestActivity entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ServerActions(ServerAction entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ServerActions(ServerAction entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ServerErrors(ServerError entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ServerErrors(ServerError entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Schedule")]
	public partial class Schedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ScheduleId;
		
		private System.Guid _SubscriptionId;
		
		private string _NotificationMessage;
		
		private string _ScheduleName;
		
		private System.Nullable<double> _Quantity;
		
		private string _UnitOfMeasure;
		
		private int _DaysRepeatInterval;
		
		private string _Notes;
		
		private bool _CreateScheduleEntries;
		
		private bool _ExcludeNonWorkingDays;
		
		private bool _ExcludePublicHolidays;
		
		private bool _IsMondayWorkDay;
		
		private bool _IsTuesdayWorkDay;
		
		private bool _IsWednesdayWorkDay;
		
		private bool _IsThursdayWorkDay;
		
		private bool _IsFridayWorkDay;
		
		private bool _IsSaturdayWorkDay;
		
		private bool _IsSundayWorkDay;
		
		private System.DateTime _DateCreated;
		
		private EntitySet<ScheduleEntry> _ScheduleEntries;
		
		private EntityRef<Subscription> _Subscription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScheduleIdChanging(System.Guid value);
    partial void OnScheduleIdChanged();
    partial void OnSubscriptionIdChanging(System.Guid value);
    partial void OnSubscriptionIdChanged();
    partial void OnNotificationMessageChanging(string value);
    partial void OnNotificationMessageChanged();
    partial void OnScheduleNameChanging(string value);
    partial void OnScheduleNameChanged();
    partial void OnQuantityChanging(System.Nullable<double> value);
    partial void OnQuantityChanged();
    partial void OnUnitOfMeasureChanging(string value);
    partial void OnUnitOfMeasureChanged();
    partial void OnDaysRepeatIntervalChanging(int value);
    partial void OnDaysRepeatIntervalChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCreateScheduleEntriesChanging(bool value);
    partial void OnCreateScheduleEntriesChanged();
    partial void OnExcludeNonWorkingDaysChanging(bool value);
    partial void OnExcludeNonWorkingDaysChanged();
    partial void OnExcludePublicHolidaysChanging(bool value);
    partial void OnExcludePublicHolidaysChanged();
    partial void OnIsMondayWorkDayChanging(bool value);
    partial void OnIsMondayWorkDayChanged();
    partial void OnIsTuesdayWorkDayChanging(bool value);
    partial void OnIsTuesdayWorkDayChanged();
    partial void OnIsWednesdayWorkDayChanging(bool value);
    partial void OnIsWednesdayWorkDayChanged();
    partial void OnIsThursdayWorkDayChanging(bool value);
    partial void OnIsThursdayWorkDayChanged();
    partial void OnIsFridayWorkDayChanging(bool value);
    partial void OnIsFridayWorkDayChanged();
    partial void OnIsSaturdayWorkDayChanging(bool value);
    partial void OnIsSaturdayWorkDayChanged();
    partial void OnIsSundayWorkDayChanging(bool value);
    partial void OnIsSundayWorkDayChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public Schedule()
		{
			this._ScheduleEntries = new EntitySet<ScheduleEntry>(new Action<ScheduleEntry>(this.attach_ScheduleEntries), new Action<ScheduleEntry>(this.detach_ScheduleEntries));
			this._Subscription = default(EntityRef<Subscription>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ScheduleId
		{
			get
			{
				return this._ScheduleId;
			}
			set
			{
				if ((this._ScheduleId != value))
				{
					this.OnScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduleId = value;
					this.SendPropertyChanged("ScheduleId");
					this.OnScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriptionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SubscriptionId
		{
			get
			{
				return this._SubscriptionId;
			}
			set
			{
				if ((this._SubscriptionId != value))
				{
					if (this._Subscription.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubscriptionIdChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionId = value;
					this.SendPropertyChanged("SubscriptionId");
					this.OnSubscriptionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationMessage", DbType="VarChar(140) NOT NULL", CanBeNull=false)]
		public string NotificationMessage
		{
			get
			{
				return this._NotificationMessage;
			}
			set
			{
				if ((this._NotificationMessage != value))
				{
					this.OnNotificationMessageChanging(value);
					this.SendPropertyChanging();
					this._NotificationMessage = value;
					this.SendPropertyChanged("NotificationMessage");
					this.OnNotificationMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string ScheduleName
		{
			get
			{
				return this._ScheduleName;
			}
			set
			{
				if ((this._ScheduleName != value))
				{
					this.OnScheduleNameChanging(value);
					this.SendPropertyChanging();
					this._ScheduleName = value;
					this.SendPropertyChanged("ScheduleName");
					this.OnScheduleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Float")]
		public System.Nullable<double> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitOfMeasure", DbType="VarChar(50)")]
		public string UnitOfMeasure
		{
			get
			{
				return this._UnitOfMeasure;
			}
			set
			{
				if ((this._UnitOfMeasure != value))
				{
					this.OnUnitOfMeasureChanging(value);
					this.SendPropertyChanging();
					this._UnitOfMeasure = value;
					this.SendPropertyChanged("UnitOfMeasure");
					this.OnUnitOfMeasureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysRepeatInterval", DbType="Int NOT NULL")]
		public int DaysRepeatInterval
		{
			get
			{
				return this._DaysRepeatInterval;
			}
			set
			{
				if ((this._DaysRepeatInterval != value))
				{
					this.OnDaysRepeatIntervalChanging(value);
					this.SendPropertyChanging();
					this._DaysRepeatInterval = value;
					this.SendPropertyChanged("DaysRepeatInterval");
					this.OnDaysRepeatIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateScheduleEntries", DbType="Bit NOT NULL")]
		public bool CreateScheduleEntries
		{
			get
			{
				return this._CreateScheduleEntries;
			}
			set
			{
				if ((this._CreateScheduleEntries != value))
				{
					this.OnCreateScheduleEntriesChanging(value);
					this.SendPropertyChanging();
					this._CreateScheduleEntries = value;
					this.SendPropertyChanged("CreateScheduleEntries");
					this.OnCreateScheduleEntriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExcludeNonWorkingDays", DbType="Bit NOT NULL")]
		public bool ExcludeNonWorkingDays
		{
			get
			{
				return this._ExcludeNonWorkingDays;
			}
			set
			{
				if ((this._ExcludeNonWorkingDays != value))
				{
					this.OnExcludeNonWorkingDaysChanging(value);
					this.SendPropertyChanging();
					this._ExcludeNonWorkingDays = value;
					this.SendPropertyChanged("ExcludeNonWorkingDays");
					this.OnExcludeNonWorkingDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExcludePublicHolidays", DbType="Bit NOT NULL")]
		public bool ExcludePublicHolidays
		{
			get
			{
				return this._ExcludePublicHolidays;
			}
			set
			{
				if ((this._ExcludePublicHolidays != value))
				{
					this.OnExcludePublicHolidaysChanging(value);
					this.SendPropertyChanging();
					this._ExcludePublicHolidays = value;
					this.SendPropertyChanged("ExcludePublicHolidays");
					this.OnExcludePublicHolidaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMondayWorkDay", DbType="Bit NOT NULL")]
		public bool IsMondayWorkDay
		{
			get
			{
				return this._IsMondayWorkDay;
			}
			set
			{
				if ((this._IsMondayWorkDay != value))
				{
					this.OnIsMondayWorkDayChanging(value);
					this.SendPropertyChanging();
					this._IsMondayWorkDay = value;
					this.SendPropertyChanged("IsMondayWorkDay");
					this.OnIsMondayWorkDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTuesdayWorkDay", DbType="Bit NOT NULL")]
		public bool IsTuesdayWorkDay
		{
			get
			{
				return this._IsTuesdayWorkDay;
			}
			set
			{
				if ((this._IsTuesdayWorkDay != value))
				{
					this.OnIsTuesdayWorkDayChanging(value);
					this.SendPropertyChanging();
					this._IsTuesdayWorkDay = value;
					this.SendPropertyChanged("IsTuesdayWorkDay");
					this.OnIsTuesdayWorkDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWednesdayWorkDay", DbType="Bit NOT NULL")]
		public bool IsWednesdayWorkDay
		{
			get
			{
				return this._IsWednesdayWorkDay;
			}
			set
			{
				if ((this._IsWednesdayWorkDay != value))
				{
					this.OnIsWednesdayWorkDayChanging(value);
					this.SendPropertyChanging();
					this._IsWednesdayWorkDay = value;
					this.SendPropertyChanged("IsWednesdayWorkDay");
					this.OnIsWednesdayWorkDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsThursdayWorkDay", DbType="Bit NOT NULL")]
		public bool IsThursdayWorkDay
		{
			get
			{
				return this._IsThursdayWorkDay;
			}
			set
			{
				if ((this._IsThursdayWorkDay != value))
				{
					this.OnIsThursdayWorkDayChanging(value);
					this.SendPropertyChanging();
					this._IsThursdayWorkDay = value;
					this.SendPropertyChanged("IsThursdayWorkDay");
					this.OnIsThursdayWorkDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFridayWorkDay", DbType="Bit NOT NULL")]
		public bool IsFridayWorkDay
		{
			get
			{
				return this._IsFridayWorkDay;
			}
			set
			{
				if ((this._IsFridayWorkDay != value))
				{
					this.OnIsFridayWorkDayChanging(value);
					this.SendPropertyChanging();
					this._IsFridayWorkDay = value;
					this.SendPropertyChanged("IsFridayWorkDay");
					this.OnIsFridayWorkDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSaturdayWorkDay", DbType="Bit NOT NULL")]
		public bool IsSaturdayWorkDay
		{
			get
			{
				return this._IsSaturdayWorkDay;
			}
			set
			{
				if ((this._IsSaturdayWorkDay != value))
				{
					this.OnIsSaturdayWorkDayChanging(value);
					this.SendPropertyChanging();
					this._IsSaturdayWorkDay = value;
					this.SendPropertyChanged("IsSaturdayWorkDay");
					this.OnIsSaturdayWorkDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSundayWorkDay", DbType="Bit NOT NULL")]
		public bool IsSundayWorkDay
		{
			get
			{
				return this._IsSundayWorkDay;
			}
			set
			{
				if ((this._IsSundayWorkDay != value))
				{
					this.OnIsSundayWorkDayChanging(value);
					this.SendPropertyChanging();
					this._IsSundayWorkDay = value;
					this.SendPropertyChanged("IsSundayWorkDay");
					this.OnIsSundayWorkDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleEntry", Storage="_ScheduleEntries", ThisKey="ScheduleId", OtherKey="ScheduleId")]
		public EntitySet<ScheduleEntry> ScheduleEntries
		{
			get
			{
				return this._ScheduleEntries;
			}
			set
			{
				this._ScheduleEntries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subscription_Schedule", Storage="_Subscription", ThisKey="SubscriptionId", OtherKey="SubscriptionId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		internal Subscription Subscription
		{
			get
			{
				return this._Subscription.Entity;
			}
			set
			{
				Subscription previousValue = this._Subscription.Entity;
				if (((previousValue != value) 
							|| (this._Subscription.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subscription.Entity = null;
						previousValue.Schedules.Remove(this);
					}
					this._Subscription.Entity = value;
					if ((value != null))
					{
						value.Schedules.Add(this);
						this._SubscriptionId = value.SubscriptionId;
					}
					else
					{
						this._SubscriptionId = default(System.Guid);
					}
					this.SendPropertyChanged("Subscription");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ScheduleEntries(ScheduleEntry entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = this;
		}
		
		private void detach_ScheduleEntries(ScheduleEntry entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = null;
		}
	}
}
#pragma warning restore 1591
