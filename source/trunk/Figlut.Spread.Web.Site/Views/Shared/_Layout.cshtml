@using Figlut.Spread.Web.Site.Configuration;
@using Figlut.Spread.Data;
@using Figlut.Spread.ORM;
@using Figlut.Spread.ORM.Helpers;

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8" />
        <title>@ViewBag.Title</title>
        <link href="~/FiglutIcon.ico" rel="shortcut icon" type="image/x-icon" />

        @*Comment out the line below to enable scaling for mobile devices.*@
        @if (Convert.ToBoolean(SpreadWebApp.Instance.GlobalSettings[GlobalSettingName.DisableScreenScalingForMobileDevices].SettingValue))
        {
            <meta name="viewport" content="width=device-width" />
        }

        @Styles.Render("~/Content/slickbuttons/css")
        @Styles.Render("~/Content/themes/base/css")
        @Scripts.Render("~/bundles/modernizr")

        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/jqueryui")
        @Styles.Render("~/Content/css")
    </head>
    <body>
        <script type="text/javascript">
            function loadDialog(dialogWrapperName, dialogName, action, controller, fieldName, fieldValue) {
                if ($(dialogName).length == 0) {
                    var url;
                    if (fieldName == undefined || fieldValue == undefined) {
                        url = "@Url.Action("_Action", "_Controller")".replace("_Action", action).replace("_Controller", controller);
                    }
                    else {
                        url = "@Url.Action("_Action", "_Controller", new { _FieldName = "_FieldValue" })".replace("_Action", action).replace("_Controller", controller).replace("_FieldName", fieldName).replace("_FieldValue", fieldValue);
                    }
                    $(dialogWrapperName).load(url);
                }
            }

            function showDialog(dialogWrapperName, dialogName, action, controller, fieldName, fieldValue) {
                var url;
                if (fieldName == undefined || fieldValue == undefined) {
                    url = "@Url.Action("_Action", "_Controller")".replace("_Action", action).replace("_Controller", controller);
                }
                else {
                    url = "@Url.Action("_Action", "_Controller", new { _FieldName = "_FieldValue" })".replace("_Action", action).replace("_Controller", controller).replace("_FieldName", fieldName).replace("_FieldValue", fieldValue);
                }
                if ($(dialogName).length == 0) {
                    $(dialogWrapperName).load(url);
                } else {
                    $.ajax({
                        url: url,
                        type: 'GET',
                        cache: false,
                        success: function (data) {
                            $(dialogName).html(data);
                        }
                    });
                }
                $(dialogName).dialog("open");
            }

            $(document).ready(function () {
                //loadDialog("#divLogin", "#dlgLogin", "LoginDialog", "User");
                @if (Request.IsAuthenticated)
                {
                    <text>
    @*                    loadDialog("#divViewCustomer", "#dlgViewCustomer", "ViewDialog", "Customer", "userName", "@User.Identity.Name");
                        loadDialog("#divChangePIN", "#dlgChangePIN", "ChangePINDialog", "Customer");*@
                    </text>
                    //if (SpreadEntityContext.Create().IsUserOfRole(User.Identity.Name, UserRole.Administrator))
                    {
                        <text>
                            //loadDialog("#divGlobalSettings", "#dlgGlobalSettings", "GlobalSettingsDialog", "GlobalSetting");
                            //loadDialog("#divEditCustomer", "#dlgEditCustomer", "EditDialog", "Customer");
                            //loadDialog("#divEditVendor", "#dlgEditVendor", "EditDialog", "Vendor");
                            //loadDialog("#divCreateVendor", "#dlgCreateVendor", "CreateDialog", "Vendor");
                            //loadDialog("#divEditOperator", "#dlgEditOperator", "EditDialog", "Operator");
                            //loadDialog("#divCreateOperator", "#dlgCreateOperator", "CreateDialog", "Operator");
                            //loadDialog("#divCreateCustomer", "#dlgCreateCustomer", "CreateDialog", "Customer");
                            //loadDialog("#divEditUser", "#dlgEditUser", "EditDialog", "User");
                            //loadDialog("#divCreateUser", "#dlgCreateUser", "CreateDialog", "User");
                        </text>   
                    }
                }
            });
        </script>

        @*Dialogs*@
        <div id='divConfirmationDialog'></div>
        <div id="divWaitDialog"></div>
        <div id="divInformationDialog"></div>
        <div id="divEditGlobalSetting"></div>
        <div id="divEditOrganization"></div>
        <div id="divEditUser"></div>
        <div id="divEditUserPassword"></div>
        <div id="divCreateSubscriber"></div>
        <div id="divEditSubscriber"></div>
        <div id="divEditSubscriberSubscription"></div>
        <div id="divCreateOrganizationSubscription"></div>
        <div id="divEditOrganizationSubscription"></div>
        <div id="divEditSmsCampaign"></div>
        <div id="divCreateSmsCampaign"></div>
        <div id="divEditWebRequestActivity"></div>
        <div id="divEditCountry"></div>
        <div id="divCreateCountry"></div>
        <div id="divCreatePublicHoliday"></div>
        <div id="divGenerateCountryPublicHolidays"></div>
        <div id="divEditPublicHoliday"></div>
        <div id="divEditSmsMessageTemplate"></div>
        <div id="divCreateSmsMessageTemplate"></div>
        <div id="divCreateRepeatSchedule"></div>
        <div id="divEditRepeatSchedule"></div>
        <div id="divCreateRepeatScheduleEntry"></div>
        <div id="divShiftRepeatScheduleEntry"></div>
        <div id="divEditRepeatScheduleEntry"></div>

        <a id="back-to-top"></a>
        <header>
            <div class="content-wrapper">
                <div class="float-left">
                    <nav>
                        <ul id="menu">
                            @{
                                User currentUser = null;
                                Organization currentOrganization = null;
                                string currentAction = ViewContext.RouteData.GetRequiredString("action");
                                string currentController = ViewContext.RouteData.GetRequiredString("controller");
                            }
                            @if (Request.IsAuthenticated)
                            {
                                SpreadEntityContext context = SpreadEntityContext.Create();
                                currentUser = context.GetUserByIdentifier(User.Identity.Name, false);
                                if (currentUser.OrganizationId.HasValue)
                                {
                                    currentOrganization = context.GetOrganization(currentUser.OrganizationId.Value, false);
                                }
                                if (currentUser == null)
                                {
                                    //If the request is authenticated, but the user does not exist in the database, sign out the user.
                                    FormsAuthentication.SignOut();
                                }
                            }
                            @if (currentUser == null)
                            {
                                <li>@Html.ActionLink("Login", "Login", "User")</li>
                                <li>@Html.ActionLink("Register", "Register", "User")</li>
                            }
                            else
                            {
                                UserRole role = (UserRole)currentUser.RoleId;
                                <li>
                                    @*@Html.Raw(User.Identity.Name)*@
                                    @Html.Raw("Profile")
                                    <ul style="left:0%">
                                        @*<li>@Html.ActionLink("User Profile", "EditProfile", "User")</li>*@
                                        <li>@Html.ActionLink(currentUser.UserName, "EditProfile", "User")</li>
                                        <br />
                                        @*<li>@Html.ActionLink("Organization Profile", "EditProfile", "Organization")</li>*@
                                        <li>@Html.ActionLink(string.Format("{0} (Credits: {1})", currentOrganization.Name, currentOrganization.SmsCreditsBalance), "EditProfile", "Organization")</li>
                                        <br />
                                        <hr />
                                        <li>@Html.ActionLink(string.Format("Purchase Credits"), "CreateOrder", "Order")</li>
                                        <br />
                                        <hr />
                                        <li style="color:white">@Html.ActionLink("Log Off", "LogOff", "User")</li>
                                    </ul>
                                </li>
                                <li>
                                    @Html.Raw("SMS")
                                    <ul style="left:3.5%">
                                        <li>@Html.ActionLink("Sent", "Index", "SmsSent")</li>
                                        <br />
                                        <li>@Html.ActionLink("Received", "Index", "SmsReceived")</li>
                                        <br />
                                        <hr />
                                        <li>@Html.ActionLink("Compose", "ComposeStandalone", "SmsSent")</li>
                                    </ul>
                                </li>
                                if (role == UserRole.Administrator)
                                {
                                    <li>
                                        @Html.Raw("Manage")
                                        <ul style="left:6%">
                                            @if(currentOrganization != null)
                                            {
                                                <li>@Html.ActionLink("Subscriptions", "Index", "OrganizationSubscription", new { organizationId = currentOrganization.OrganizationId }, null)</li>
                                                <br />
                                                <li>@Html.ActionLink("SMS Campaigns", "Index", "SmsCampaign", new { organizationId = currentOrganization.OrganizationId }, null)</li>
                                                <br />
                                                <li>@Html.ActionLink("SMS Message Templates", "Index", "SmsMessageTemplate", new { organizationId = currentOrganization.OrganizationId }, null)</li>
                                                <br />
                                                <hr />
                                            }
                                            <li>@Html.ActionLink("Organizations", "Index", "Organization")</li>
                                            <br />
                                            <li>@Html.ActionLink("Users", "Index", "User")</li>
                                            <br />
                                            <li>@Html.ActionLink("Subscribers", "Index", "Subscriber")</li>
                                            <br />
                                            <li>@Html.ActionLink("Public Holidays", "Index", "Country")</li>
                                        </ul>
                                    </li>
                                    <li>
                                        @Html.Raw("Tools")
                                        <ul style="left:10.5%">
                                            <li>@Html.ActionLink("SMS Processors", "Index", "SmsProcessor")</li>
                                            <br />
                                            <li>@Html.ActionLink("Web Requests", "Index", "WebRequestActivity")</li>
                                            <br />
                                            <hr />
                                            <li>@Html.ActionLink("Global Settings", "Index", "GlobalSetting")</li>
                                        </ul>
                                    </li>
                                }
                                else
                                {
                                    <li>
                                        @Html.Raw("Manage")
                                        <ul style="left:6%">
                                            @if (currentOrganization != null)
                                            {
                                                <li>@Html.ActionLink("Subscriptions", "Index", "OrganizationSubscription", new { organizationId = currentOrganization.OrganizationId }, null)</li>
                                                <br />
                                                <li>@Html.ActionLink("SMS Campaigns", "Index", "SmsCampaign", new { organizationId = currentOrganization.OrganizationId }, null)</li>
                                                <br />
                                                <li>@Html.ActionLink("SMS Message Templates", "Index", "SmsMessageTemplate", new { organizationId = currentOrganization.OrganizationId }, null)</li>
                                            }
                                        </ul>
                                    </li>   
                                }
                            }
                        </ul>
                    </nav>
                </div>
                <div class="float-right">
                    <nav>
                        <ul id="menu">
                            <li>
                                @Html.ActionLink("Home", "Index", "Home")
                            </li>
                            <li>
                                @Html.ActionLink("My Subscriptions", "ViewSubscriberSubscriptions", "SubscriberSubscription")
                            </li>
                            <li>
                                @{
                                    string featuresAnchor = "#features";
                                    string featuresUrl = Url.Action("Index", "Home") + featuresAnchor;
                                    if(currentController == "Home" && currentAction == "Index") //Visiter is on the home page.
                                    {
                                        featuresUrl = featuresAnchor;
                                    }
                                    <a href="@featuresUrl">Features</a>
                                }
                            </li>
                            <li>
                                @{
                                    string servicesAnchor = "#services";
                                    string servicesUrl = Url.Action("Index", "Home") + servicesAnchor;
                                    if(currentController == "Home" && currentAction == "Index") //Visiter is on the home page.
                                    {
                                        servicesUrl = servicesAnchor;
                                    }
                                    <a href="@servicesUrl">Services</a>
                                }
                            </li>
                            <li>
                                @{
                                    string contactAnchor = "#contact";
                                    string contactUrl = Url.Action("Index", "Home") + contactAnchor;
                                    if(currentController == "Home" && currentAction == "Index") //Visiter is on the home page.
                                    {
                                        contactUrl = contactAnchor;
                                    }
                                    <a href="@contactUrl">Contact</a>
                                }
                            </li>
                            <li>
                                @{
                                    string aboutAnchor = "#about";
                                    string aboutUrl = Url.Action("Index", "Home") + aboutAnchor;
                                    if(currentController == "Home" && currentAction == "Index") //Visiter is on the home page.
                                    {
                                        aboutUrl = aboutAnchor;
                                    }
                                    <a href="@aboutUrl">About</a>
                                }
                            </li>
                        </ul>
                    </nav>
                </div>
            </div>

        </header>
        <div id="body">
            @RenderSection("featured", required: false)
            <section class="featured">
                <div class="content-wrapper">
                    <div class="logoimagebanner">
                        <a href="@Url.Action("Index", "Home")" style="background-color:transparent">
                            <img src="~/Images/FiglutLogo/logo_small.png" style="width:110%; margin-top:10px; border:none" />
                        </a>
                    </div>
                </div>
            </section>
            <section class="content-wrapper main-content clear-fix">
                @RenderBody()
            </section>
        </div>
        <footer>
            <div class="content-wrapper">
                <div class="centerInformation" style="color:#3195c2; text-align:center">
                    <p>&copy; @(string.Format("{0} - {1}", DateTime.Now.Year.ToString(), SpreadWebApp.Instance.Settings.ApplicationName))</p>
                </div>
            </div>
        </footer>

        @*Used for Ajax calls to do partial form updates.*@
        @Scripts.Render("~/bundles/jqueryval")

        @RenderSection("scripts", required: false)
        <script type="text/javascript">
            $(function () {
                $("ul#menu li").each(function () {
                    if ($(this).find("ul").length > 0) {

                        //show subnav on hover  
                        $(this).mouseenter(function () {
                            $(this).find("ul").stop(true, true).slideDown();
                        });

                        //hide submenus on exit  
                        $(this).mouseleave(function () {
                            $(this).find("ul").stop(true, true).slideUp();
                        });

                        $(this).find("ul").mousemove(function () {
                            $(this).stop(true, true).show();
                        });
                    }
                });
            });

            (function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
                    (i[r].q = i[r].q || []).push(arguments)
                }, i[r].l = 1 * new Date(); a = s.createElement(o),
                m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
            })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');

            ga('create', 'UA-98631502-1', 'auto');
            ga('send', 'pageview');
        </script>
    </body>
</html>
