@model Figlut.Spread.Web.Site.Models.SendSubscriberSmsModel
<div id="dlgSendSubscriberSmsDialog">
    <img src="~/Images/Icons/red-mail-open-icon32.png" style="float:right; margin-right:1%; margin-left:1%" />
    <div class="centerForm">
        <form id="SendSubscriberSmsForm">
            @Html.ValidationSummary(true, "Send SMS failed.")
            <fieldset>
                <legend>Confirmation Form</legend>
                @Html.HiddenFor(m => m.SubscriberId)
                @Html.HiddenFor(m => m.CellPhoneNumberSendSubscriberSmsDialog)
                @Html.HiddenFor(m => m.MaxSmsSendMessageLength)

                <div class="field-label">
                    @Html.Raw(string.Format("Subscriber Cell Phone Number", Model.CellPhoneNumberSendSubscriberSmsDialog))
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(m => m.CellPhoneNumberSendSubscriberSmsDialog, new { disabled = "disabled", @readonly = "readonly", onKeyPress = "return disableEnterKey(event)" })
                    @Html.ValidationMessageFor(m => m.CellPhoneNumberSendSubscriberSmsDialog)
                </div>

                @if (ViewBag.SmsMessageTemplateList != null)
                {
                    <div class="field-label">
                        @Html.Raw("SMS Message Templates")
                    </div>
                    <div class="editor-field">
                        @Html.DropDownList("SmsMessageTemplateIdSendSubsccriberSmsDialog", ViewBag.SmsMessageTemplateList as List<SelectListItem>, new { @class = "drop-down-field", @onchange = "onSmsMessageTemplateSendSubscriberSmsChanged()" })
                    </div>
                }
                else
                {
                    @Html.HiddenFor(m => m.SmsMessageTemplateIdSendSubsccriberSmsDialog)
                }
                <div class="field-label">
                    @Html.Raw(string.Format("Message (max {0} characters)", Model.MaxSmsSendMessageLength))
                </div>
                <div class="editor-field">
                    @Html.TextAreaFor(m => m.MessageContentsSendSubscriberSmsDialog, new { style = "height: 100px;width:80%", onKeyPress = "return disableEnterKey(event)" })
                    @Html.ValidationMessageFor(m => m.MessageContentsSendSubscriberSmsDialog)
                </div>
                <br />
                <div id="SendSubscriberSmsErrorField" style="color:#8A0808"></div>
            </fieldset>
        </form>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        var dialogName = '#dlgSendSubscriberSmsDialog';
        createDialog(dialogName, 'Send SMS to Subscriber ', onConfirmOK, onConfirmOpen, onConfirmCancel, 450, 600);
        $("#MessageContents").focus();
    });

    function onSmsMessageTemplateSendSubscriberSmsChanged() {
        var smsMessageTemplate = $('#SmsMessageTemplateIdSendSubsccriberSmsDialog').val();
        $("#MessageContentsSendSubscriberSmsDialog").val(smsMessageTemplate)
    }

    function onConfirmOK() {
        sendEnabled = false;

        var cellPhoneNumber = '@Model.CellPhoneNumberSendSubscriberSmsDialog';
        var waitMessage = 'Sending SMS to ' + cellPhoneNumber + ' ...';
        var informationMessage = 'SMS sent successfully to ' + cellPhoneNumber + '.';

        $(".ui-dialog-buttonpane button:contains('OK')").hide();
        showDialog(
            '#divWaitDialog',
            '#dlgWait',
            'WaitDialog',
            'SmsSent',
            'message',
            waitMessage);

        var dialogName = '#dlgSendSubscriberSmsDialog';
        var postBackUrl = '@Url.Action("SendSms", "Subscriber")';
        $.ajax({
            url: postBackUrl,
            type: 'POST',
            data: $("#SendSubscriberSmsForm").serialize(),
            success: function (data) {
                if (data.Success) {
                    $(".ui-dialog-buttonpane button:contains('OK')").show();
                    $('#dlgWait').dialog("close");
                    $(dialogName).dialog("close");
                    showDialog(
                        '#divInformationDialog',
                        '#dlgInformation',
                        'InformationDialog',
                        'SmsSent',
                        'message',
                        informationMessage);
                    $("#MessageContents").val('');
                    //Submit the form which will refresh grid to show the change the enabled/disabled.
                    var form = $('#frmDetails');
                    form.submit()
                    refreshSmsCreditsBalanceMenu();
                } else {
                    $('#dlgWait').dialog("close");
                    $(".ui-dialog-buttonpane button:contains('OK')").show();
                    $("#SendSubscriberSmsErrorField").html(data.ErrorMsg);
                    sendEnabled = true;
                }
            }
        })
    };

    function onConfirmOpen() {
    }

    function onConfirmCancel() {
        //$('#confirmation-message').val('');
        $("#SendSubscriberSmsErrorField").html('');
    }
</script>