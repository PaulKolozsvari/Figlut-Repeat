namespace Figlut.Spread.SMS
{
    #region Using Directives

    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using System.Threading.Tasks;

    #endregion //Using Directives

    public class SmsResponse
    {
        #region Constructors

        public SmsResponse()
        {
        }

        public SmsResponse(
            bool success,
            string messageId,
            string error,
            string errorCode)
        {
            _success = success;
            _messageId = messageId;
            _error = error;
            _errorCode = errorCode;
        }

        #endregion //Constructors

        #region Fields

        protected bool _success;
        protected string _messageId;
        protected string _error;
        protected string _errorCode;
        protected SmsProvider _smsProvider;

        #endregion //Fields

        #region Properties

        //Whether or not the SMS was sent successfully.
        public bool success
        {
            get { return _success; }
            set { _success = value; }
        }

        /// <summary>
        /// The ID of the message generated by ZoomConnect.com
        /// </summary>
        public string messageId
        {
            get { return _messageId; }
            set { _messageId = value; }
        }

        public string error
        {
            get { return _error; }
            set { _error = value; }
        }

        /// <summary>
        /// If sending the SMS failed this field will be populated with the error message received from Clickatell.
        /// </summary>
        public string errorCode
        {
            get { return _errorCode; }
            set { _errorCode = value; }
        }

        /// <summary>
        /// The SMS provider used to send the SMS.
        /// </summary>
        public SmsProvider smsProvider
        {
            get { return _smsProvider; }
            set { _smsProvider = value; }
        }

        #endregion //Properties

        #region Methods

        public override string ToString()
        {
            StringBuilder result = new StringBuilder();
            result.AppendLine(string.Format("SmsResponse Type: {0}", this.GetType().Name));
            result.AppendLine(string.Format("Success: {0}", _success));
            result.AppendLine(string.Format("Message ID: {0}", _messageId));
            if (!string.IsNullOrEmpty(_error))
            {
                result.AppendLine(string.Format("Error: {0}", _error));
            }
            if (!string.IsNullOrEmpty(_errorCode))
            {
                result.AppendLine(string.Format("Error Code: {0}", _errorCode));
            }
            result.AppendLine(string.Format("Sms Provider: {0}", _smsProvider.ToString()));
            return base.ToString();
        }

        #endregion //Methods
    }
}
